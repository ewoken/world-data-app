{"version":3,"sources":["api/country.js","store/countries.js","api/helpers.js","api/statistics/eiaApi.js","api/statistics/ieaApi.js","api/statistics/worldBankApi.js","api/statistics/converters.js","api/statistics/statistics.js","api/statistics/index.js","store/statistics.js","store/index.js","views/HomeView.jsx","components/StatisticChart.jsx","views/ChartView.jsx","views/CountryView/components/PrimaryEnergyChart.jsx","views/CountryView/containers/PrimaryEnergyChartContainer.jsx","utils/index.js","views/CountryView/components/ProdConsoChart.jsx","views/CountryView/containers/ProdConsoCharContainer.jsx","views/CountryView/components/CountryMap.jsx","views/CountryView/containers/CountryMapContainer.jsx","views/CountryView/index.jsx","loaders/index.jsx","components/AppLayout.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["countriesData","require","noData","countries","map","country","id","Number","ccn3","alpha2Code","cca2","commonName","name","common","alpha3Code","cca3","numericCode","region","subregion","isIndependent","independent","area","capital","latlng","disabled","includes","filter","c","getAllCountries","Promise","resolve","COUNTRIES_LOAD_ACTION","COUNTRIES_RECEIVE_ACTION","receiveCountriesAction","_ref","data","errors","type","initialState","loading","loaded","countriesLoadedSelector","state","countriesSelector","values","countrySelector","countryCode","countriesReducer","arguments","length","undefined","action","Object","objectSpread","retryFetch","url","options","retryCount","fetch","catch","error","reject","setTimeout","then","EIA_API_KEY","process","EIA_API","parseValue","value","isNaN","_callee","statistic","seriesId","response","regenerator_default","a","wrap","_context","prev","next","seriesOfCountry","concat","sent","json","startsWith","abrupt","series","d","statisticCode","code","year","unitConverter","stop","this","IEA_API","cache","ieaId","years","datasets","keys","reduce","map1","countriesOfYear","countryAlpha3Code","item","push","WORLD_BANK_API","worldBankCode","object","date","convert_TWh_to_Mtoe","twh","generationToConsumption","statistics","description","startingYear","endingYear","unit","sources","api","toFixed","getStatisticOfCountry","_x","_x2","_fetchStatisticFromEIA","apply","fetchStatisticFromEIA","_fetchStatisticFromIEA","fetchStatisticFromIEA","_fetchStatisticFromWorldBank","fetchStatisticFromWorldBank","STATISTICS_LOAD_ACTION","STATISTICS_RECEIVE_ACTION","COUNTRY_STATISTIC_LOAD_ACTION","COUNTRY_STATISTIC_RECEIVE_ACTION","receiveStatisticsAction","receiveCountryStatisticAction","_ref2","initialCountryStatistic","countryStatisticReducer","countryStatistic","statisticsLoadedSelector","allStatisticsSelector","statisticSelector","countryStatisticSelector","_ref3","countryStatisticValuesSelector","_ref5","countryStatisticsLoadedSelector","_ref6","statisticCodes","every","_ref4","countryStatisticLoadedSelector","compiledCountryStatisticsSelector","_ref7","_ref10","mapOfStatisticCodes","mapOfStatisticValues","arrayOfStatisticValues","startingYears","statisticValues","Math","min","toConsumableArray","v","endingYears","max","mapOfNamedStatisticValues","mapObjIndexed","compileName","_ref8","defineProperty","allValues","allValuesByYear","groupBy","sort","valuesOfYear","mergeAll","loadCountryStatistic","_ref11","dispatch","getState","loadCountryStatisticAction","res","statisticValue","loadCountryStatistics","_ref12","all","statisticsReducer","rootReducer","combineReducers","enhancers","applyMiddleware","thunk","enhancer","composeWithDevTools","store","createStore","HomeView","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","react_default","createElement","className","Component","StatisticChart","prevProps","_this2","_this$props","props","_this$state","LineChart","width","height","Line","dataKey","stroke","dot","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","defaultProps","ChartView","row","justify","col","span","es_select","style","size","placeholder","maxTagCount","optionFilterProp","showSearch","onSelect","setCountry","sortBy","prop","Option","key","title","setStatistic","components_StatisticChart","connect","CustomTooltip","active","payload","label","total","sum","p","lineHeight","color","PrimaryEnergyChart","stacked","setStacked","perCapita","setPerCapita","dataWithTotal","coal","oil","gas","hydro","nuclear","renewables","finalData","w","pow","population","omit","hasCoal","some","hasOil","hasGas","hasNuclear","hasHydro","hasRenewables","LineArea","Area","es_radio","Group","buttonStyle","onChange","e","target","marginRight","Button","ResponsiveContainer","ComposedChart","margin","top","right","bottom","left","activeDot","fill","stackId","opacity","domain","interval","angle","position","content","Legend","iconType","ConnectedPrimaryEnergyChart","PrimaryEnergyChartContainer","loadStatistics","_this$props2","_this$props3","isLoaded","spin","PropTypes","arrayOf","shape","number","isRequired","i","ProdConsoChart","fuel","prodStatistic","consoStatistic","prodValues","consoValues","console","warn","compileStatistics","prod","conso","l","diff","export","import","base","strokeOpacity","fillOpacity","strokeWidth","offset","props2","ProdConsoChart_CustomTooltip","assign","ConnectedProdConsoChart","prodStatisticCode","consoStatisticCode","ProdConsoChartContainer","CustomGeoJSON","createGeoJSON","geojson","remove","leaflet","L","geoJSON","addTo","bounds","getBounds","flyToBounds","GeoJSON","withLeaflet","CountryMap","countryGeoJSON","Map","center","zoom","zIndex","TileLayer","attribution","CountryMapContainer","toLowerCase","components_CountryMap","CountryView","Redirect","to","gutter","marginBottom","sm","md","toLocaleString","containers_PrimaryEnergyChartContainer","src","alt","containers_CountryMapContainer","ProdConsoCharContainer","match","params","withLoader","config","loadFunctions","_config$isLoadedSelec","isLoadedSelector","_config$mapStateToPro","mapStateToProps","loadAll","loadFunction","WrappedComponent","ConnectedWrappedComponent","load","_Component","LoaderComponent","inherits","createClass","objectWithoutProperties","otherProps","CountriesLoader","indexBy","StatisticsLoader","withRouter","isReady","history","layout","Header","menu","mode","theme","selectable","Item","Link","Content","padding","marginTop","Switch","Route","path","exact","component","pathname","Footer","App","es","HashRouter","components_AppLayout","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70533130.chunk.js","sourcesContent":["const countriesData = require('world-countries/countries');\n\nconst noData = ['AD', 'LI', 'MH', 'FM', 'MC', 'PW', 'SM', 'TV', 'VA'];\n\nconst countries = countriesData\n  .map(country => ({\n    id: Number(country.ccn3),\n    alpha2Code: country.cca2,\n    commonName: country.name.common,\n    alpha3Code: country.cca3,\n    numericCode: country.ccn3,\n    region: country.region,\n    subregion: country.subregion,\n    isIndependent: country.independent,\n    area: country.area,\n    capital: country.capital,\n    latlng: country.latlng,\n    disabled: noData.includes(country.cca2),\n  }))\n  .filter(c => c.region !== 'Antarctic')\n  .filter(c => c.isIndependent);\n\nfunction getAllCountries() {\n  return Promise.resolve(countries);\n}\n\nexport default getAllCountries;\n","import { values, indexBy, prop } from 'ramda';\n\nimport getAllCountries from '../api/country';\n\nexport const COUNTRIES_LOAD_ACTION = 'COUNTRIES_LOAD_ACTION';\nexport const COUNTRIES_RECEIVE_ACTION = 'COUNTRIES_RECEIVE_ACTION';\n\nfunction loadCountriesAction() {\n  return { type: COUNTRIES_LOAD_ACTION };\n}\n\nfunction receiveCountriesAction({ data, errors }) {\n  return { type: COUNTRIES_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllCountries() {\n  return function dispatchLoadAllCountries(dispatch) {\n    dispatch(loadCountriesAction());\n    return getAllCountries()\n      .then(data =>\n        dispatch(\n          receiveCountriesAction({\n            data: indexBy(prop('alpha2Code'), data),\n          }),\n        ),\n      )\n      .catch(errors => dispatch(receiveCountriesAction({ errors })));\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction countriesReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case COUNTRIES_LOAD_ACTION:\n      return { ...state, loading: true };\n    case COUNTRIES_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function countriesLoadedSelector(state) {\n  return state.countries.loaded;\n}\n\nexport function countriesSelector(state) {\n  return values(state.countries.data);\n}\n\nexport function countrySelector(countryCode, state) {\n  return state.countries.data[countryCode];\n}\n\nexport default countriesReducer;\n","// eslint-disable-next-line import/prefer-default-export\nexport function retryFetch(url, options, retryCount = 0) {\n  return fetch(url, options).catch(error => {\n    if (retryCount > 3) {\n      throw error;\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        retryFetch(url, options, retryCount + 1)\n          .then(resolve)\n          .catch(reject);\n      }, 3000);\n    });\n  });\n}\n","import { retryFetch } from '../helpers';\n\nconst EIA_API_KEY = process.env.REACT_APP_EIA_API_KEY;\nexport const EIA_API = 'EIA_API';\n\nfunction parseValue(value) {\n  if (value === '(s)') {\n    return 0;\n  }\n  // eslint-disable-next-line no-restricted-globals\n  if (isNaN(value)) {\n    return null;\n  }\n  return value;\n}\n\nexport async function fetchStatisticFromEIA(statistic, country) {\n  const seriesId = statistic.seriesOfCountry(country);\n  const response = await retryFetch(\n    `http://api.eia.gov/series/?api_key=${EIA_API_KEY}&series_id=${seriesId}`,\n  );\n  const data = await response.json();\n\n  if (\n    data.data &&\n    data.data.error &&\n    data.data.error.startsWith('invalid series_id')\n  ) {\n    return [];\n  }\n\n  return data.series[0].data.map(d => {\n    const value = parseValue(d[1]);\n    return {\n      statisticCode: statistic.code,\n      countryCode: country.alpha2Code,\n      year: Number(d[0]),\n      value: value !== null ? statistic.unitConverter(value) : null,\n    };\n  });\n}\n","import { retryFetch } from '../helpers';\n\nexport const IEA_API = 'IEA_API';\nconst cache = {};\n\nexport async function fetchStatisticFromIEA(statistic, country) {\n  const { ieaId } = statistic;\n\n  if (!cache[ieaId]) {\n    const response = await retryFetch(\n      `http://energyatlas.iea.org/DataServlet?edition=WORLD&lang=en&datasets=${ieaId}&cmd=getdatavalues`,\n    );\n    const data = await response.json();\n    const years = data.datasets[ieaId].values;\n\n    cache[ieaId] = Object.keys(years).reduce((map1, year) => {\n      const countriesOfYear = years[year];\n\n      return Object.keys(countriesOfYear).reduce((map, countryAlpha3Code) => {\n        const { value } = countriesOfYear[countryAlpha3Code];\n        const item = { year: Number(year), value };\n\n        if (map[countryAlpha3Code]) {\n          map[countryAlpha3Code].push(item);\n        } else {\n          // eslint-disable-next-line no-param-reassign\n          map[countryAlpha3Code] = [item];\n        }\n        return map;\n      }, map1);\n    }, {});\n  }\n\n  return cache[ieaId][country.alpha3Code] || [];\n}\n","import { retryFetch } from '../helpers';\n\nexport const WORLD_BANK_API = 'WORLD_BANK_API';\n\nexport async function fetchStatisticFromWorldBank(statistic, country) {\n  const { worldBankCode } = statistic;\n\n  const response = await retryFetch(\n    `http://api.worldbank.org/v2/countries/${\n      country.alpha2Code\n    }/indicators/${worldBankCode}?format=json&per_page=100`,\n  );\n  const data = await response.json();\n\n  if (!data[1]) {\n    return [];\n  }\n\n  return data[1].map(object => ({\n    statisticCode: statistic.code,\n    countryCode: country.alpha2Code,\n    year: Number(object.date),\n    value: object.value,\n  }));\n}\n","// eslint-disable-next-line camelcase\nexport function convert_TWh_to_Mtoe(twh) {\n  return twh / 11.63;\n}\n\n// eslint-disable-next-line camelcase\nexport function generationToConsumption(value) {\n  return value / 0.38;\n}\n","import { EIA_API } from './eiaApi';\nimport { IEA_API } from './ieaApi';\nimport { WORLD_BANK_API } from './worldBankApi';\n\n// eslint-disable-next-line camelcase\nimport { convert_TWh_to_Mtoe, generationToConsumption } from './converters';\n\nconst statistics = [\n  {\n    code: 'COAL_PRODUCTION_MTOE',\n    name: 'Coal production',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2016, // TODO\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.7-1-${country.alpha3Code}-MTOE.A`,\n    unitConverter: value => Number(value.toFixed(2)),\n  },\n  {\n    code: 'COAL_CONSUMPTION_MTOE',\n    name: 'Coal consumption',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2016, // TODO\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.7-2-${country.alpha3Code}-MTOE.A`,\n    unitConverter: value => Number(value.toFixed(2)),\n  },\n  {\n    code: 'GAS_PRODUCTION_MTOE',\n    name: 'Gas production',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2017,\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.26-1-${country.alpha3Code}-MTOE.A`,\n    unitConverter: value => Number(value.toFixed(2)),\n  },\n  {\n    code: 'GAS_CONSUMPTION_MTOE',\n    name: 'Gas consumption',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2017,\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.26-2-${country.alpha3Code}-MTOE.A`,\n    unitConverter: value => Number(value.toFixed(2)),\n  },\n  {\n    code: 'OIL_PRODUCTION_MTOE',\n    name: 'Oil production',\n    description: '',\n    startingYear: 1973,\n    endingYear: 2014,\n    unit: 'Mtoe',\n    sources: 'IEA',\n    api: IEA_API,\n    ieaId: '-21319742',\n  },\n  {\n    code: 'OIL_CONSUMPTION_MTOE',\n    name: 'Oil consumption',\n    description: '',\n    startingYear: 1973,\n    endingYear: 2014,\n    unit: 'Mtoe',\n    sources: 'IEA',\n    api: IEA_API,\n    ieaId: '642753284',\n  },\n  {\n    code: 'HYDRO_CONSUMPTION_MTOE',\n    name: 'Hydroelectricity consumption',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2016,\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.33-12-${country.alpha3Code}-BKWH.A`,\n    unitConverter: value =>\n      Number(generationToConsumption(convert_TWh_to_Mtoe(value)).toFixed(2)),\n  },\n  {\n    code: 'NUCLEAR_CONSUMPTION_MTOE',\n    name: 'Nuclear consumption',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2016,\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.27-12-${country.alpha3Code}-BKWH.A`,\n    unitConverter: value =>\n      Number(generationToConsumption(convert_TWh_to_Mtoe(value)).toFixed(2)),\n  },\n  {\n    code: 'NON_HYDRO_RENEWABLES_CONSUMPTION_MTOE',\n    name: 'Non-Hydroelectric renewables consumption',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2016,\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.34-12-${country.alpha3Code}-BKWH.A`,\n    unitConverter: value =>\n      Number(generationToConsumption(convert_TWh_to_Mtoe(value)).toFixed(2)),\n  },\n  {\n    code: 'WASTE_BIOMASS_CONSUMPTION_MTOE',\n    name: 'Waste and biomass consumption',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2016,\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.38-12-${country.alpha3Code}-BKWH.A`,\n    unitConverter: value =>\n      Number(generationToConsumption(convert_TWh_to_Mtoe(value)).toFixed(2)),\n  },\n  {\n    code: 'PRIMARY_ENERGY_MTOE',\n    name: 'Primary energy consumption',\n    description: '',\n    startingYear: 1980,\n    endingYear: 2016,\n    unit: 'Mtoe',\n    sources: 'EIA, U.S. Energy Information Administration',\n    api: EIA_API,\n    seriesOfCountry: country => `INTL.44-2-${country.alpha3Code}-MTOE.A`,\n    unitConverter: value => Number(value.toFixed(2)),\n  },\n  {\n    code: 'POPULATION',\n    name: 'Population',\n    description: '',\n    startingYear: 1960,\n    endingYear: 2017,\n    unit: 'capita',\n    sources: 'World Bank',\n    api: WORLD_BANK_API,\n    worldBankCode: 'SP.POP.TOTL',\n  },\n];\n\nexport default statistics;\n","import { EIA_API, fetchStatisticFromEIA } from './eiaApi';\nimport { IEA_API, fetchStatisticFromIEA } from './ieaApi';\nimport { WORLD_BANK_API, fetchStatisticFromWorldBank } from './worldBankApi';\nimport statistics from './statistics';\n\nexport function getAllStatistics() {\n  return Promise.resolve(statistics);\n}\n\nexport function getStatisticOfCountry(statistic, country) {\n  switch (statistic.api) {\n    case EIA_API:\n      return fetchStatisticFromEIA(statistic, country);\n    case IEA_API:\n      return fetchStatisticFromIEA(statistic, country);\n    case WORLD_BANK_API:\n      return fetchStatisticFromWorldBank(statistic, country);\n    default:\n      return Promise.resolve([]);\n  }\n}\n","import {\n  values,\n  indexBy,\n  prop,\n  mapObjIndexed,\n  mergeAll,\n  groupBy,\n  map,\n} from 'ramda';\n\nimport { getAllStatistics, getStatisticOfCountry } from '../api/statistics';\nimport { countrySelector } from './countries';\n\nexport const STATISTICS_LOAD_ACTION = 'STATISTICS_LOAD_ACTION';\nexport const STATISTICS_RECEIVE_ACTION = 'STATISTICS_RECEIVE_ACTION';\nexport const COUNTRY_STATISTIC_LOAD_ACTION = 'COUNTRY_STATISTIC_LOAD_ACTION';\nexport const COUNTRY_STATISTIC_RECEIVE_ACTION =\n  'COUNTRY_STATISTIC_RECEIVE_ACTION';\n\nfunction loadStatisticsAction() {\n  return { type: STATISTICS_LOAD_ACTION };\n}\n\nfunction receiveStatisticsAction({ data, errors }) {\n  return { type: STATISTICS_RECEIVE_ACTION, data, errors };\n}\n\nfunction loadCountryStatisticAction(statisticCode, countryCode) {\n  return { type: COUNTRY_STATISTIC_LOAD_ACTION, statisticCode, countryCode };\n}\n\nfunction receiveCountryStatisticAction({\n  countryCode,\n  statisticCode,\n  data,\n  errors,\n}) {\n  return {\n    type: COUNTRY_STATISTIC_RECEIVE_ACTION,\n    countryCode,\n    statisticCode,\n    data,\n    errors,\n  };\n}\n\nconst initialCountryStatistic = {\n  loading: true,\n  loaded: false,\n  errors: null,\n  values: [],\n};\nfunction countryStatisticReducer(countryStatistic, action) {\n  switch (action.type) {\n    case COUNTRY_STATISTIC_LOAD_ACTION:\n      return initialCountryStatistic;\n    case COUNTRY_STATISTIC_RECEIVE_ACTION:\n      return {\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        values: action.data || {},\n      };\n    default:\n      return countryStatistic;\n  }\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\nfunction statisticsReducer(state = initialState, action) {\n  switch (action.type) {\n    case STATISTICS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case STATISTICS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    case COUNTRY_STATISTIC_LOAD_ACTION:\n    case COUNTRY_STATISTIC_RECEIVE_ACTION: {\n      const statistic = state.data[action.statisticCode];\n      const countryStatistic = statistic.values[action.countryCode];\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.statisticCode]: {\n            ...statistic,\n            values: {\n              ...statistic.values,\n              [action.countryCode]: countryStatisticReducer(\n                countryStatistic,\n                action,\n              ),\n            },\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport function statisticsLoadedSelector(state) {\n  return state.statistics.loaded;\n}\n\nexport function allStatisticsSelector(state) {\n  return values(state.statistics.data);\n}\n\nexport function statisticSelector(statisticCode, state) {\n  return state.statistics.data[statisticCode];\n}\n\nexport function countryStatisticSelector(\n  { statisticCode, countryCode },\n  state,\n) {\n  const statistic = statisticSelector(statisticCode, state);\n  return statistic.values[countryCode];\n}\n\nexport function countryStatisticLoadedSelector(\n  { statisticCode, countryCode },\n  state,\n) {\n  const countryStatistic = countryStatisticSelector(\n    {\n      statisticCode,\n      countryCode,\n    },\n    state,\n  );\n  return countryStatistic ? countryStatistic.loaded : false;\n}\n\nexport function countryStatisticValuesSelector(\n  { statisticCode, countryCode },\n  state,\n) {\n  const countryStatistic = countryStatisticSelector(\n    {\n      statisticCode,\n      countryCode,\n    },\n    state,\n  );\n  return countryStatistic ? countryStatistic.values : [];\n}\n\nexport function countryStatisticsLoadedSelector(\n  { statisticCodes, countryCode },\n  state,\n) {\n  return statisticCodes.every(statisticCode =>\n    countryStatisticLoadedSelector({ statisticCode, countryCode }, state),\n  );\n}\n\nexport function compiledCountryStatisticsSelector(\n  { mapOfStatisticCodes, countryCode },\n  state,\n) {\n  const mapOfStatisticValues = map(\n    statisticCode =>\n      countryStatisticValuesSelector({ statisticCode, countryCode }, state),\n    mapOfStatisticCodes,\n  );\n  const arrayOfStatisticValues = values(mapOfStatisticValues);\n\n  const startingYears = arrayOfStatisticValues.map(statisticValues =>\n    Math.min(...statisticValues.map(v => v.year)),\n  );\n  const endingYears = arrayOfStatisticValues.map(statisticValues =>\n    Math.max(...statisticValues.map(v => v.year)),\n  );\n\n  const startingYear = Math.max(...startingYears);\n  const endingYear = Math.min(...endingYears);\n\n  const mapOfNamedStatisticValues = mapObjIndexed(\n    (statisticValues, compileName) =>\n      statisticValues.map(({ year, value }) => ({\n        year,\n        [compileName]: value,\n      })),\n    mapOfStatisticValues,\n  );\n  const allValues = [].concat(...values(mapOfNamedStatisticValues));\n  const allValuesByYear = groupBy(value => value.year, allValues);\n  const compiledStatistics = Object.keys(allValuesByYear)\n    .sort()\n    .map(year => {\n      const valuesOfYear = allValuesByYear[year];\n\n      return mergeAll(valuesOfYear);\n    })\n    .filter(value => startingYear <= value.year && value.year <= endingYear);\n\n  return compiledStatistics;\n}\n\nexport function loadAllStatistics() {\n  return function dispatchLoadStatistics(dispatch) {\n    dispatch(loadStatisticsAction());\n\n    return getAllStatistics()\n      .then(data => {\n        const statistics = data.map(statistic => ({\n          ...statistic,\n          values: {},\n        }));\n        dispatch(\n          receiveStatisticsAction({\n            data: indexBy(prop('code'), statistics),\n          }),\n        );\n      })\n      .catch(errors => dispatch(receiveStatisticsAction({ errors })));\n  };\n}\n\nexport function loadCountryStatistic({ statisticCode, countryCode }) {\n  return function dispatchLoadCountryStatistic(dispatch, getState) {\n    const state = getState();\n    const statistic = statisticSelector(statisticCode, state);\n    const country = countrySelector(countryCode, state);\n\n    // TODO\n    if (statistic.values[countryCode] && statistic.values[countryCode].loaded) {\n      return;\n    }\n\n    dispatch(loadCountryStatisticAction(statisticCode, countryCode));\n\n    getStatisticOfCountry(statistic, country)\n      .then(res => {\n        const data = res.map(statisticValue => ({\n          year: statisticValue.year,\n          value: statisticValue.value,\n        }));\n\n        dispatch(\n          receiveCountryStatisticAction({ countryCode, statisticCode, data }),\n        );\n      })\n      .catch(errors =>\n        dispatch(\n          receiveCountryStatisticAction({ statisticCode, countryCode, errors }),\n        ),\n      );\n  };\n}\n\n// TODO\nexport function loadCountryStatistics({ statisticCodes, countryCode }) {\n  return function dispatchloadCountryStatistics(dispatch, getState) {\n    return Promise.all(\n      statisticCodes.map(statisticCode =>\n        loadCountryStatistic({ statisticCode, countryCode })(\n          dispatch,\n          getState,\n        ),\n      ),\n    );\n  };\n}\n\nexport default statisticsReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport countriesReducer from './countries';\nimport statisticsReducer from './statistics';\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  countries: countriesReducer,\n  statistics: statisticsReducer,\n});\n\nconst enhancers = [applyMiddleware(thunk)];\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass HomeView extends Component {\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  setCountry(countryCode) {\n    this.setState(state => ({\n      ...state,\n      countryCode,\n    }));\n  }\n\n  setStatistic(statisticCode) {\n    this.setState(state => ({\n      ...state,\n      statisticCode,\n    }));\n  }\n\n  render() {\n    return <div className=\"HomeView\" />;\n  }\n}\n\nHomeView.propTypes = {};\n\nexport default HomeView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\n\nconst server = process.env.REACT_APP_WORLD_DATA_STORE;\n\nclass StatisticChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  componentDidUpdate(prevProps) {\n    const { countryCode, statisticCode } = this.props;\n    if (\n      (prevProps.countryCode !== countryCode && countryCode) ||\n      (prevProps.statisticCode !== statisticCode && statisticCode)\n    ) {\n      fetch(`${server}/statistic/${statisticCode}?country=${countryCode}`)\n        .then(res => res.json())\n        .then(res => this.setState(res));\n    }\n  }\n\n  render() {\n    const { data, unit } = this.state;\n\n    if (!data) {\n      return null;\n    }\n\n    return (\n      <div className=\"StatisticChart\">\n        <LineChart width={600} height={300} data={data}>\n          <Line\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#8884d8\"\n            unit={unit}\n            dot={false}\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"year\" />\n          <YAxis />\n          <Tooltip />\n        </LineChart>\n      </div>\n    );\n  }\n}\n\nStatisticChart.propTypes = {\n  countryCode: PropTypes.string,\n  statisticCode: PropTypes.string,\n};\n\nStatisticChart.defaultProps = {\n  countryCode: null,\n  statisticCode: null,\n};\n\nexport default StatisticChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { sortBy, prop } from 'ramda';\n\nimport { Row, Col, Select } from 'antd';\nimport StatisticChart from '../components/StatisticChart';\n\nimport { countriesSelector } from '../store/countries';\nimport { allStatisticsSelector } from '../store/statistics';\n\nclass ChartView extends Component {\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  setCountry(countryCode) {\n    this.setState(state => ({\n      ...state,\n      countryCode,\n    }));\n  }\n\n  setStatistic(statisticCode) {\n    this.setState(state => ({\n      ...state,\n      statisticCode,\n    }));\n  }\n\n  render() {\n    const { countries, statistics } = this.props;\n    const { statisticCode, countryCode } = this.state;\n    return (\n      <div className=\"ChartView\">\n        <Row type=\"flex\" justify=\"center\">\n          <h2>Select a country</h2>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={10}>\n            <Select\n              style={{ width: '100%' }}\n              size=\"large\"\n              placeholder=\"Countries\"\n              maxTagCount={3}\n              optionFilterProp=\"title\"\n              showSearch\n              onSelect={value => {\n                this.setCountry(value);\n              }}\n            >\n              {sortBy(prop('commonName'), countries).map(country => (\n                <Select.Option\n                  key={country.alpha2Code}\n                  title={`${country.commonName} (${country.alpha3Code})`}\n                >\n                  {country.commonName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <h2>or a statistic</h2>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={10}>\n            <Select\n              style={{ width: '100%' }}\n              size=\"large\"\n              placeholder=\"Statistics\"\n              maxTagCount={3}\n              optionFilterProp=\"title\"\n              showSearch\n              onSelect={value => {\n                this.setStatistic(value);\n              }}\n            >\n              {sortBy(prop('name'), statistics).map(statistic => (\n                <Select.Option key={statistic.code} title={`${statistic.name}`}>\n                  {statistic.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Col>\n        </Row>\n        <StatisticChart\n          countryCode={countryCode}\n          statisticCode={statisticCode}\n        />\n      </div>\n    );\n  }\n}\n\nChartView.propTypes = {\n  countries: PropTypes.arrayOf(\n    PropTypes.shape({\n      alpha2Code: PropTypes.string.isRequired,\n      commonName: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  statistics: PropTypes.arrayOf(\n    PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default connect(state => ({\n  countries: countriesSelector(state),\n  statistics: allStatisticsSelector(state),\n}))(ChartView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { map, omit } from 'ramda';\n\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Area,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { Radio } from 'antd';\n\nfunction CustomTooltip(props) {\n  const { active, payload } = props;\n\n  if (active && payload && payload.length > 0) {\n    const { label } = props;\n    const { unit } = payload[0];\n    const total = payload.reduce((sum, { value }) => sum + value, 0);\n\n    return (\n      <div className=\"CustomTooltip\">\n        <div>{label}</div>\n        <div>\n          {payload &&\n            payload.map(p => (\n              <div\n                key={p.dataKey}\n                style={{ lineHeight: '22px', color: p.color }}\n              >\n                {`${p.name} : ${p.value} ${p.unit}`}\n              </div>\n            ))}\n          <div key=\"total\" style={{ lineHeight: '22px', color: 'red' }}>\n            {`Total : ${total.toFixed(2)} ${unit}`}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return null;\n}\nCustomTooltip.propTypes = {\n  active: PropTypes.bool.isRequired,\n  payload: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n      unit: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  label: PropTypes.string,\n};\nCustomTooltip.defaultProps = {\n  label: '',\n};\n\nfunction PrimaryEnergyChart(props) {\n  const { data, stacked, setStacked, perCapita, setPerCapita } = props;\n  const unit = perCapita ? ' toe/capita' : ' Mtoe';\n\n  const dataWithTotal = data.map(v => ({\n    ...v,\n    total: Number(\n      (v.coal + v.oil + v.gas + v.hydro + v.nuclear + v.renewables).toFixed(2),\n    ),\n  }));\n  const finalData = perCapita\n    ? dataWithTotal.map(v => ({\n        ...v,\n        ...map(\n          w => Number(((w * 10 ** 6) / v.population).toFixed(2)),\n          omit(['year', 'population'], v),\n        ),\n      }))\n    : dataWithTotal;\n\n  const hasCoal = data.some(v => v.coal >= 0.01);\n  const hasOil = data.some(v => v.oil >= 0.01);\n  const hasGas = data.some(v => v.gas >= 0.01);\n  const hasNuclear = data.some(v => v.nuclear >= 0.01);\n  const hasHydro = data.some(v => v.hydro >= 0.01);\n  const hasRenewables = data.some(v => v.renewables >= 0.01);\n\n  const LineArea = stacked ? Area : Line;\n\n  return (\n    <div className=\"PrimaryEnergyChart\">\n      <h3 className=\"PrimaryEnergyChart__title\">Primary Energy Consumption</h3>\n      <div>\n        <Radio.Group\n          buttonStyle=\"solid\"\n          size=\"small\"\n          value={stacked}\n          onChange={e => setStacked(e.target.value)}\n          style={{ marginRight: '10px' }}\n        >\n          <Radio.Button value>Stacked</Radio.Button>\n          <Radio.Button value={false}>Split</Radio.Button>\n        </Radio.Group>\n        <Radio.Group\n          buttonStyle=\"solid\"\n          size=\"small\"\n          value={perCapita}\n          onChange={e => setPerCapita(e.target.value)}\n        >\n          <Radio.Button value={false}>Absolute</Radio.Button>\n          <Radio.Button value>Per capita</Radio.Button>\n        </Radio.Group>\n      </div>\n      <ResponsiveContainer height={300} width=\"100%\">\n        <ComposedChart\n          data={finalData}\n          margin={{ top: 10, right: 0, bottom: 10, left: 0 }}\n        >\n          {hasCoal && (\n            <LineArea\n              type=\"monotone\"\n              dataKey=\"coal\"\n              dot={false}\n              activeDot={false}\n              name=\"Coal\"\n              stroke=\"black\"\n              fill=\"black\"\n              stackId=\"1\"\n              unit={unit}\n            />\n          )}\n          {hasOil && (\n            <LineArea\n              type=\"monotone\"\n              dataKey=\"oil\"\n              dot={false}\n              activeDot={false}\n              name=\"Oil\"\n              stroke=\"grey\"\n              fill=\"grey\"\n              stackId=\"1\"\n              unit={unit}\n            />\n          )}\n          {hasGas && (\n            <LineArea\n              type=\"monotone\"\n              dataKey=\"gas\"\n              dot={false}\n              activeDot={false}\n              name=\"Gas\"\n              stroke=\"orange\"\n              fill=\"orange\"\n              stackId=\"1\"\n              unit={unit}\n            />\n          )}\n          {hasNuclear && (\n            <LineArea\n              type=\"monotone\"\n              dataKey=\"nuclear\"\n              dot={false}\n              activeDot={false}\n              name=\"Nuclear\"\n              stroke=\"purple\"\n              fill=\"purple\"\n              stackId=\"1\"\n              unit={unit}\n            />\n          )}\n          {hasHydro && (\n            <LineArea\n              type=\"monotone\"\n              dataKey=\"hydro\"\n              dot={false}\n              activeDot={false}\n              name=\"Hydroelectricity\"\n              stroke=\"blue\"\n              fill=\"blue\"\n              stackId=\"1\"\n              unit={unit}\n            />\n          )}\n          {hasRenewables && (\n            <LineArea\n              type=\"monotone\"\n              dataKey=\"renewables\"\n              dot={false}\n              activeDot={false}\n              name=\"Other renewables\"\n              stroke=\"green\"\n              fill=\"green\"\n              stackId=\"1\"\n              unit={unit}\n            />\n          )}\n\n          <CartesianGrid stroke=\"#ccc\" opacity={0.2} />\n          <XAxis dataKey=\"year\" domain={['dataMin', 'dataMax']} interval={4} />\n          <YAxis\n            // label={{ value: unit, position: 'insideTopLeft', offset: -20 }}\n            label={{\n              value: unit,\n              angle: -90,\n              position: 'insideLeft',\n            }}\n          />\n          <Tooltip content={CustomTooltip} />\n          <Legend iconType=\"plainLine\" />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nPrimaryEnergyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      year: PropTypes.number,\n      coal: PropTypes.number,\n      oil: PropTypes.number,\n      gas: PropTypes.number,\n      hydro: PropTypes.number,\n      nuclear: PropTypes.number,\n      renewables: PropTypes.number,\n      total: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n  setStacked: PropTypes.func.isRequired,\n  setPerCapita: PropTypes.func.isRequired,\n  stacked: PropTypes.bool.isRequired,\n  perCapita: PropTypes.bool.isRequired,\n};\n\nexport default PrimaryEnergyChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { values } from 'ramda';\n\nimport { Spin } from 'antd';\n\nimport PrimaryEnergyChart from '../components/PrimaryEnergyChart';\n\nimport {\n  loadCountryStatistics,\n  countryStatisticsLoadedSelector,\n  compiledCountryStatisticsSelector,\n} from '../../../store/statistics';\n\nconst mapOfStatisticCodes = {\n  coal: 'COAL_CONSUMPTION_MTOE',\n  gas: 'GAS_CONSUMPTION_MTOE',\n  oil: 'OIL_CONSUMPTION_MTOE',\n  hydro: 'HYDRO_CONSUMPTION_MTOE',\n  nuclear: 'NUCLEAR_CONSUMPTION_MTOE',\n  renewables: 'NON_HYDRO_RENEWABLES_CONSUMPTION_MTOE',\n  population: 'POPULATION',\n};\nconst statisticCodes = values(mapOfStatisticCodes);\n\nconst ConnectedPrimaryEnergyChart = connect((state, { countryCode }) => ({\n  data: compiledCountryStatisticsSelector(\n    {\n      mapOfStatisticCodes,\n      countryCode,\n    },\n    state,\n  ),\n}))(PrimaryEnergyChart);\n\nclass PrimaryEnergyChartContainer extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      stacked: true,\n      perCapita: false,\n    };\n  }\n\n  componentDidMount() {\n    const { countryCode, loadStatistics } = this.props;\n\n    loadStatistics({ statisticCodes, countryCode });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { countryCode, loadStatistics } = this.props;\n    if (countryCode !== prevProps.countryCode) {\n      loadStatistics({ statisticCodes, countryCode });\n    }\n  }\n\n  setStacked(stacked) {\n    this.setState({ stacked });\n  }\n\n  setPerCapita(perCapita) {\n    this.setState({ perCapita });\n  }\n\n  render() {\n    const { isLoaded, countryCode } = this.props;\n    const { stacked, perCapita } = this.state;\n\n    return isLoaded ? (\n      <ConnectedPrimaryEnergyChart\n        countryCode={countryCode}\n        setStacked={value => this.setStacked(value)}\n        setPerCapita={value => this.setPerCapita(value)}\n        stacked={stacked}\n        perCapita={perCapita}\n      />\n    ) : (\n      <Spin>\n        <ConnectedPrimaryEnergyChart\n          countryCode={countryCode}\n          stacked={stacked}\n          perCapita={perCapita}\n          setStacked={() => {}}\n        />\n      </Spin>\n    );\n  }\n}\n\nPrimaryEnergyChartContainer.propTypes = {\n  countryCode: PropTypes.string.isRequired,\n  loadStatistics: PropTypes.func.isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  (state, props) => ({\n    isLoaded: countryStatisticsLoadedSelector(\n      {\n        statisticCodes,\n        countryCode: props.countryCode,\n      },\n      state,\n    ),\n  }),\n  { loadStatistics: loadCountryStatistics },\n)(PrimaryEnergyChartContainer);\n","import PropTypes from 'prop-types';\nimport { values, mapObjIndexed, mergeAll, groupBy } from 'ramda';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function compileStatistics(mapOfStatisticValues) {\n  const arrayOfStatisticValues = values(mapOfStatisticValues);\n\n  const startingYears = arrayOfStatisticValues.map(statisticValues =>\n    Math.min(...statisticValues.map(v => v.year)),\n  );\n  const endingYears = arrayOfStatisticValues.map(statisticValues =>\n    Math.max(...statisticValues.map(v => v.year)),\n  );\n\n  const startingYear = Math.max(...startingYears);\n  const endingYear = Math.min(...endingYears);\n\n  const mapOfNamedStatisticValues = mapObjIndexed(\n    (statisticValues, compileName) =>\n      statisticValues.map(({ year, value }) => ({\n        year,\n        [compileName]: value,\n      })),\n    mapOfStatisticValues,\n  );\n  const allValues = [].concat(...values(mapOfNamedStatisticValues));\n  const allValuesByYear = groupBy(value => value.year, allValues);\n  const compiledStatistics = Object.keys(allValuesByYear)\n    .sort()\n    .map(year => {\n      const valuesOfYear = allValuesByYear[year];\n\n      return mergeAll(valuesOfYear);\n    })\n    .filter(value => startingYear <= value.year && value.year <= endingYear);\n\n  return compiledStatistics;\n}\n\n// TODO types ?\nexport const StatisticValues = PropTypes.arrayOf(\n  PropTypes.shape({\n    year: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  }),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\nimport { compileStatistics, StatisticValues } from '../../../utils';\n\nfunction CustomTooltip(props) {\n  const { active } = props;\n\n  if (active) {\n    const { payload, label, filter } = props;\n    return (\n      <div className=\"CustomTooltip\">\n        <div>{label}</div>\n        <div>\n          {payload &&\n            payload.filter(filter).map(p => (\n              <div\n                key={p.dataKey}\n                style={{ lineHeight: '22px', color: p.color }}\n              >\n                {`${p.name} : ${p.value} ${p.unit}`}\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n  return null;\n}\nCustomTooltip.propTypes = {\n  active: PropTypes.bool.isRequired,\n  payload: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n      unit: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  label: PropTypes.string,\n  filter: PropTypes.func,\n};\nCustomTooltip.defaultProps = {\n  label: '',\n  filter: i => i,\n};\n\nfunction ProdConsoChart(props) {\n  const {\n    fuel,\n    prodStatistic,\n    consoStatistic,\n    // reservesStatistic,\n    prodValues,\n    consoValues,\n  } = props;\n\n  if (consoStatistic.unit !== prodStatistic.unit) {\n    // eslint-disable-next-line no-console\n    console.warn('Production and consommation have not the same unit', [\n      prodStatistic.code,\n      consoStatistic.code,\n    ]);\n  }\n  const { unit } = consoStatistic;\n\n  const compiledStatistics = compileStatistics({\n    prod: prodValues,\n    conso: consoValues,\n  });\n  const data = compiledStatistics.map(l => {\n    const diff = Number((l.prod - l.conso).toFixed(2));\n    return {\n      year: l.year,\n      prod: l.prod,\n      conso: l.conso,\n      export: diff > 0 ? diff : null,\n      import: diff < 0 ? -diff : null,\n      base: Math.min(l.prod, l.conso),\n    };\n  });\n\n  return (\n    <div className=\"ProdConsoChart\">\n      <h3>{fuel}</h3>\n      <ResponsiveContainer height={250} width=\"100%\">\n        <ComposedChart\n          data={data}\n          margin={{ top: 30, right: 20, bottom: 5, left: 20 }}\n        >\n          <Area\n            type=\"monotone\"\n            dot={false}\n            dataKey=\"base\"\n            stroke=\"none\"\n            stackId=\"1\"\n            activeDot={false}\n            fill=\"none\"\n            unit={unit}\n          />\n          <Area\n            type=\"monotone\"\n            dot={false}\n            unit={unit}\n            name={`${fuel} export`}\n            dataKey=\"export\"\n            activeDot={false}\n            stroke=\"green\"\n            strokeOpacity={0}\n            fillOpacity={1}\n            fill=\"green\"\n            stackId=\"1\"\n          />\n          <Area\n            type=\"monotone\"\n            dot={false}\n            unit={unit}\n            name={`${fuel} import`}\n            dataKey=\"import\"\n            activeDot={false}\n            stroke=\"red\"\n            strokeOpacity={0}\n            fillOpacity={1}\n            fill=\"red\"\n            stackId=\"1\"\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"conso\"\n            dot={false}\n            unit={unit}\n            stroke=\"#880000\"\n            strokeWidth={3}\n            name={consoStatistic.name}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"prod\"\n            dot={false}\n            unit={unit}\n            stroke=\"black\"\n            strokeWidth={3}\n            strokeOpacity={0.7}\n            name={prodStatistic.name}\n          />\n\n          {/* {reservesStatisticCode && (\n            <Line\n              type=\"monotone\"\n              dataKey=\"reserves\"\n              dot={false}\n              unit={reservesStatistic.unit}\n              stroke=\"blue\"\n              strokeWidth={3}\n              strokeOpacity={0.7}\n              name={reservesStatistic.name}\n              yAxisId=\"1\"\n            />\n          )} */}\n\n          <CartesianGrid stroke=\"#ccc\" opacity={0.2} />\n          <XAxis dataKey=\"year\" domain={['dataMin', 'dataMax']} interval={9} />\n          <YAxis\n            label={{ value: unit, position: 'insideTopLeft', offset: -20 }}\n          />\n          {/* {reservesStatisticCode && (\n            <YAxis\n              orientation=\"right\"\n              label={{\n                value: reservesStatistic.unit,\n                position: 'insideTopRight',\n                offset: -20,\n              }}\n              yAxisId=\"1\"\n            />\n          )} */}\n          <Tooltip\n            content={props2 => (\n              <CustomTooltip {...props2} filter={p => p.name !== 'base'} />\n            )}\n          />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nconst Statistic = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  unit: PropTypes.string.isRequired,\n});\n\nProdConsoChart.propTypes = {\n  prodStatistic: Statistic.isRequired,\n  consoStatistic: Statistic.isRequired,\n  prodValues: StatisticValues.isRequired,\n  consoValues: StatisticValues.isRequired,\n  fuel: PropTypes.string.isRequired,\n};\n\nexport default ProdConsoChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Spin } from 'antd';\n\nimport ProdConsoChart from '../components/ProdConsoChart';\n\nimport {\n  loadCountryStatistics,\n  countryStatisticsLoadedSelector,\n  statisticSelector,\n  countryStatisticValuesSelector,\n} from '../../../store/statistics';\n\nconst ConnectedProdConsoChart = connect((state, props) => ({\n  prodStatistic: statisticSelector(props.prodStatisticCode, state),\n  consoStatistic: statisticSelector(props.consoStatisticCode, state),\n  prodValues: countryStatisticValuesSelector(\n    {\n      statisticCode: props.prodStatisticCode,\n      countryCode: props.countryCode,\n    },\n    state,\n  ),\n  consoValues: countryStatisticValuesSelector(\n    {\n      statisticCode: props.consoStatisticCode,\n      countryCode: props.countryCode,\n    },\n    state,\n  ),\n}))(ProdConsoChart);\n\nclass ProdConsoChartContainer extends Component {\n  componentDidMount() {\n    const {\n      consoStatisticCode,\n      prodStatisticCode,\n      countryCode,\n      loadStatistics,\n    } = this.props;\n    const statisticCodes = [consoStatisticCode, prodStatisticCode];\n    loadStatistics({ statisticCodes, countryCode });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      countryCode,\n      loadStatistics,\n      consoStatisticCode,\n      prodStatisticCode,\n    } = this.props;\n    const statisticCodes = [consoStatisticCode, prodStatisticCode];\n    if (countryCode !== prevProps.countryCode) {\n      loadStatistics({ statisticCodes, countryCode });\n    }\n  }\n\n  render() {\n    const {\n      isLoaded,\n      fuel,\n      consoStatisticCode,\n      prodStatisticCode,\n      countryCode,\n    } = this.props;\n\n    return isLoaded ? (\n      <ConnectedProdConsoChart\n        // key={isLoaded ? 'a' : 'b'} // hack\n        fuel={fuel}\n        consoStatisticCode={consoStatisticCode}\n        prodStatisticCode={prodStatisticCode}\n        countryCode={countryCode}\n      />\n    ) : (\n      <Spin>\n        <ConnectedProdConsoChart\n          fuel={fuel}\n          consoStatisticCode={consoStatisticCode}\n          prodStatisticCode={prodStatisticCode}\n          countryCode={countryCode}\n        />\n      </Spin>\n    );\n  }\n}\n\nProdConsoChartContainer.propTypes = {\n  prodStatisticCode: PropTypes.string.isRequired,\n  consoStatisticCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  fuel: PropTypes.string.isRequired,\n  loadStatistics: PropTypes.func.isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  (state, props) => ({\n    isLoaded: countryStatisticsLoadedSelector(\n      {\n        statisticCodes: [props.prodStatisticCode, props.consoStatisticCode],\n        countryCode: props.countryCode,\n      },\n      state,\n    ),\n  }),\n  { loadStatistics: loadCountryStatistics },\n)(ProdConsoChartContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Map, TileLayer, withLeaflet } from 'react-leaflet';\nimport L from 'leaflet';\n\nclass CustomGeoJSON extends Component {\n  componentDidMount() {\n    this.createGeoJSON();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n    if (prevProps.data !== data) {\n      this.geojson.remove();\n      this.createGeoJSON();\n    }\n  }\n\n  createGeoJSON() {\n    const {\n      leaflet: { map },\n      data,\n    } = this.props;\n\n    this.geojson = L.geoJSON(data).addTo(map);\n    const bounds = this.geojson.getBounds();\n    map.flyToBounds(bounds);\n  }\n\n  render() {\n    return null;\n  }\n}\nCustomGeoJSON.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  leaflet: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.object.isRequired,\n};\nconst GeoJSON = withLeaflet(CustomGeoJSON);\n\nfunction CountryMap(props) {\n  const { country, countryGeoJSON } = props;\n\n  return (\n    <div className=\"CountryMap\">\n      <Map\n        center={country.latlng}\n        zoom={2}\n        style={{ height: '300px', zIndex: 0 }}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {countryGeoJSON && <GeoJSON data={countryGeoJSON} />}\n      </Map>\n    </div>\n  );\n}\n\nCountryMap.propTypes = {\n  country: PropTypes.shape({\n    latlng: PropTypes.arrayOf(PropTypes.number).isRequired,\n    area: PropTypes.number.isRequired,\n  }).isRequired,\n  countryGeoJSON: PropTypes.shape().isRequired,\n};\n\nexport default CountryMap;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CountryMap from '../components/CountryMap';\n\nclass CountryMapContainer extends Component {\n  constructor() {\n    super();\n    this.state = { geojson: null };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { country } = this.props;\n\n    if (prevProps.country.alpha2Code !== country.alpha2Code) {\n      this.fetch();\n    }\n  }\n\n  fetch() {\n    const { country } = this.props;\n    fetch(`/geo/${country.alpha3Code.toLowerCase()}.geo.json`)\n      .then(res => res.json())\n      .then(geojson => this.setState({ geojson }));\n  }\n\n  render() {\n    const { country } = this.props;\n    const { geojson } = this.state;\n\n    return <CountryMap country={country} countryGeoJSON={geojson} />;\n  }\n}\n\nCountryMapContainer.propTypes = {\n  country: PropTypes.shape({\n    alpha2Code: PropTypes.string.isRequired,\n    alpha3Code: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default CountryMapContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Redirect } from 'react-router-dom';\n\nimport { Row, Col } from 'antd';\n\nimport { countrySelector } from '../../store/countries';\n\nimport PrimaryEnergyChartContainer from './containers/PrimaryEnergyChartContainer';\nimport ProdConsoChartContainer from './containers/ProdConsoCharContainer';\nimport CountryMapContainer from './containers/CountryMapContainer';\n\nfunction CountryView(props) {\n  const { country } = props;\n\n  if (!country || country.disabled) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const countryCode = country.alpha2Code;\n  return (\n    <div className=\"CountryView\">\n      <Row gutter={16} style={{ marginBottom: '20px' }}>\n        <Col sm={24} md={18}>\n          <h2>{country.commonName}</h2>\n          <div>{`Capital: ${country.capital}`}</div>\n          <div>{`Area: ${country.area.toLocaleString()} km²`}</div>\n          <div>\n            <PrimaryEnergyChartContainer countryCode={country.alpha2Code} />\n          </div>\n        </Col>\n        <Col sm={0} md={6}>\n          <img\n            style={{ height: '100px' }}\n            src={`/img/flags/${country.alpha3Code.toLowerCase()}.svg`}\n            alt={`Flag of ${country.commonName}`}\n          />\n          <CountryMapContainer country={country} />\n        </Col>\n      </Row>\n      <Row>\n        <h3>Imports/Exports</h3>\n        <Col md={8} sm={24}>\n          <ProdConsoChartContainer\n            countryCode={countryCode}\n            prodStatisticCode=\"COAL_PRODUCTION_MTOE\"\n            consoStatisticCode=\"COAL_CONSUMPTION_MTOE\"\n            fuel=\"Coal\"\n          />\n        </Col>\n        <Col md={8} sm={24}>\n          <ProdConsoChartContainer\n            countryCode={countryCode}\n            prodStatisticCode=\"OIL_PRODUCTION_MTOE\"\n            consoStatisticCode=\"OIL_CONSUMPTION_MTOE\"\n            fuel=\"Oil\"\n          />\n        </Col>\n        <Col md={8} sm={24}>\n          <ProdConsoChartContainer\n            countryCode={countryCode}\n            prodStatisticCode=\"GAS_PRODUCTION_MTOE\"\n            consoStatisticCode=\"GAS_CONSUMPTION_MTOE\"\n            fuel=\"Gas\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nCountryView.propTypes = {\n  country: PropTypes.shape({\n    alpha2Code: PropTypes.string.isRequired,\n    commonName: PropTypes.string.isRequired,\n  }),\n};\nCountryView.defaultProps = {\n  country: null,\n};\n\nexport default connect((state, props) => ({\n  country: countrySelector(props.match.params.countryCode, state),\n}))(CountryView);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { loadAllCountries } from '../store/countries';\nimport { loadAllStatistics } from '../store/statistics';\n\nexport function withLoader(config) {\n  const {\n    loadFunctions,\n    isLoadedSelector = () => false,\n    mapStateToProps = () => {},\n  } = config;\n\n  const loadAll = props => (dispatch, getState) =>\n    loadFunctions.map(loadFunction => loadFunction(props)(dispatch, getState));\n\n  return function wrapLoaderHOC(WrappedComponent) {\n    const ConnectedWrappedComponent = WrappedComponent\n      ? connect(mapStateToProps)(WrappedComponent)\n      : () => null;\n\n    return connect(\n      (state, props) => ({\n        isLoaded: isLoadedSelector(props, state),\n      }),\n      { load: loadAll },\n    )(\n      class LoaderComponent extends Component {\n        static propTypes = {\n          load: PropTypes.func.isRequired,\n          isLoaded: PropTypes.bool.isRequired,\n        };\n\n        componentDidMount() {\n          const { load, isLoaded, ...args } = this.props;\n          load(args);\n        }\n\n        render() {\n          const { isLoaded, load, ...otherProps } = this.props;\n\n          if (!isLoaded) {\n            return null;\n          }\n          return <ConnectedWrappedComponent {...otherProps} />;\n        }\n      },\n    );\n  };\n}\n\nexport const CountriesLoader = withLoader({\n  loadFunctions: [loadAllCountries],\n})();\n\nexport const StatisticsLoader = withLoader({\n  loadFunctions: [loadAllStatistics],\n})();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sortBy, prop } from 'ramda';\n\nimport { Route, Switch, Redirect, Link, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Spin, Select } from 'antd';\n\nimport HomeView from '../views/HomeView';\nimport ChartView from '../views/ChartView';\nimport CountryView from '../views/CountryView';\n\nimport { CountriesLoader, StatisticsLoader } from '../loaders';\n\nimport { countriesLoadedSelector, countriesSelector } from '../store/countries';\nimport { statisticsLoadedSelector } from '../store/statistics';\n\nfunction AppLayout(props) {\n  const { isReady, countries, history } = props;\n  return (\n    <div className=\"AppLayout\">\n      <CountriesLoader />\n      <StatisticsLoader />\n      {!isReady && <Spin size=\"large\" />}\n      {isReady && (\n        <Layout>\n          <Layout.Header\n            style={{ position: 'fixed', zIndex: 10, width: '100%' }} // TODO\n          >\n            <Menu\n              mode=\"horizontal\"\n              theme=\"dark\"\n              selectable={false}\n              style={{ lineHeight: '64px' }}\n            >\n              <Menu.Item key=\"home\">\n                <Link to=\"/home\">\n                  <strong>Home</strong>\n                </Link>\n              </Menu.Item>\n              {/* <Menu.Item key=\"chart\">\n                <Link to=\"/chart\">\n                  <strong>Chart</strong>\n                </Link>\n              </Menu.Item> */}\n              <Menu.Item>\n                <Select\n                  style={{ width: '20vw' }}\n                  placeholder=\"Countries\"\n                  optionFilterProp=\"title\"\n                  showSearch\n                  onSelect={value => {\n                    history.push(`/country/${value}`);\n                  }}\n                >\n                  {sortBy(prop('commonName'), countries).map(country => (\n                    <Select.Option\n                      key={country.alpha2Code}\n                      disabled={country.disabled}\n                      title={`${country.commonName} (${country.alpha3Code})`}\n                    >\n                      {`${country.commonName}${\n                        country.disabled ? ' (No data)' : ''\n                      }`}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Menu.Item>\n            </Menu>\n          </Layout.Header>\n          <Layout.Content\n            style={{\n              padding: '20px 50px 0 50px',\n              marginTop: 64,\n            }}\n          >\n            <Switch>\n              <Route path=\"/home\" exact component={HomeView} />\n              {/* <Route path=\"/chart\" exact component={ChartView} /> */}\n              <Route\n                path=\"/country/:countryCode\"\n                exact\n                component={CountryView}\n              />\n              <Route\n                component={() => <Redirect to={{ pathname: '/home' }} />}\n              />\n            </Switch>\n          </Layout.Content>\n          <Layout.Footer>Sources: IEA & EIA</Layout.Footer>\n        </Layout>\n      )}\n    </div>\n  );\n}\n\nAppLayout.propTypes = {\n  isReady: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  countries: PropTypes.arrayOf(\n    PropTypes.shape({\n      alpha2Code: PropTypes.string.isRequired,\n      commonName: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\n// withRouter needed to prevent blocking\nexport default withRouter(\n  connect(state => ({\n    isReady: countriesLoadedSelector(state) && statisticsLoadedSelector(state),\n    countries: countriesSelector(state),\n  }))(AppLayout),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <AppLayout />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}