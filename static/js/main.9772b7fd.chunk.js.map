{"version":3,"sources":["api/countries.js","store/countries.js","utils/index.js","store/statistics/selectors.js","api/helpers.js","api/derivedStatistics.js","store/statistics/actions.js","api/statistics.js","store/statistics/reducer.js","api/areas.js","store/areas.js","store/index.js","utils/types.js","views/HomeView/components/WorldMap.jsx","components/StatisticDetails.jsx","utils/copyToClipboard.js","components/ShareChartComponent.jsx","views/HomeView/components/StatisticExplorer.jsx","views/HomeView/index.jsx","store/otherSelectors.js","HOC/components/ChartSettings.jsx","HOC/buildLoader.js","HOC/withCountryStatistics.jsx","HOC/buildChart.jsx","views/CountryView/components/CustomTooltip.jsx","views/CountryView/components/BasicChart.jsx","views/CountryView/containers/BasicChartContainer.jsx","components/GeoJSONMap.jsx","components/ScrollToTop.jsx","views/CountryView/components/EnergyMixChart.jsx","views/CountryView/containers/EnergyMixChartContainer.jsx","views/CountryView/components/SummaryTab.jsx","views/CountryView/components/ProdConsoChart.jsx","views/CountryView/components/GDPByEnergyChart.jsx","views/CountryView/components/IndependencyTab.jsx","views/CountryView/components/ClimateTab.jsx","views/CountryView/index.jsx","views/AboutView/index.jsx","views/AreaView/index.jsx","components/GitHubLink.jsx","components/HeaderMenu.jsx","components/AppLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["countryMapValues","country","worldTopo","a","objects","countries","geometries","find","c","id","numericCode","geojson","feature","bounds","L","geoJSON","getBounds","Object","objectSpread","_callee","_ref","_ref2","regenerator_default","wrap","_context","prev","next","Promise","all","fetch","map","p","then","res","json","sent","slicedToArray","abrupt","stop","this","getAllCountries","COUNTRIES_LOAD_ACTION","COUNTRIES_RECEIVE_ACTION","defaultIndicators","coal","oil","gas","hydro","nuclear","biofuelsWaste","solarWindTideGeoth","receiveCountriesAction","data","errors","type","initialState","loading","loaded","countriesLoadedSelector","state","countriesSelector","values","filter","isIndependent","countriesInBounds","boundsFilter","intersects","dependentCountriesSelector","countrySelector","countryCode","areas","fuelConsumedCountrySelector","hasConsumed","fuelProducedOrConsumedCountrySelector","mapObjIndexed","v","k","hasProduced","countriesReducer","arguments","length","undefined","action","coordsToLatLng","coords","_coords","longitude","latitude","latLng","isMobileOrTablet","check","navigator","userAgent","vendor","window","opera","test","substr","formatNumber","value","Number","isNaN","toPrecision","toLocaleString","tickFormatter","displayUnit","unit","perCapita","concat","base","main","parseMapOfStatistics","mapOfCountryStatistics","defaultCountry","statistics","statisticCode","addPopCountryStatistics","countryCodes","uniq","d","populations","mergeAll","defineProperty","statisticsLoadedSelector","allStatisticsSelector","statisticSelector","countryStatisticSelector","statistic","countryStatisticLoadedSelector","compute","source","every","sourceCode","countryStatistic","countryStatisticValuesSelector","_ref4","compiledCountryStatisticsSelector","_ref3","year","sources","objectWithoutProperties","isFinite","computeDerivedValueFromCompiled","statisticOfAllCountriesLoadedSelector","alpha2Code","fn","hashFunction","args","JSON","stringify","cacheSize","cache","_len","Array","_key","hash","apply","hashes","keys","memoize","_ref5","_ref9","baseMap","mapOfStatistic","_ref6","mapOfStatisticValues","_computeYearInterval","arrayOfStatisticValues","startingYears","statisticValues","Math","min","toConsumableArray","endingYears","max","computeYearInterval","_computeYearInterval2","startingYear","endingYear","mapOfNamedStatisticValues","compileName","_ref7","allValues","allValuesByYear","groupBy","sort","compiledValue","popCompileName","population","factor","populationFactor","computeValue","omit","compiledStatisticForCountriesAndYear","_ref10","push","yearValue","statisticSourcesSelector","statisticCodes","reduce","statisticSources","code","fetchJSON","url","options","MTOE_UNIT","pow","TWH_UNIT","POWER_PLANT_EFFICIENCIES","derivedStatistics","name","description","consumption","production","sourceAttribution","category","isIntensive","energy","gdp","co2","scale","geothSolarWindTide","STATISTICS_LOAD_ACTION","STATISTICS_RECEIVE_ACTION","COUNTRY_STATISTIC_LOAD_ACTION","COUNTRY_STATISTIC_RECEIVE_ACTION","STATISTIC_LOAD_ALL_COUNTRIES_ACTION","STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION","receiveStatisticsAction","receiveCountryStatisticAction","receiveStatisticOfCountriesAction","loadCountryStatistic","dispatch","getState","countryStatistics","loadCountryStatistics","loadCountryStatisticAction","getStatisticOfCountry","statisticValue","catch","initialCountryStatistic","countryStatisticReducer","statisticsReducer","acc","WORLD","indexedCountries","indexBy","cca2","countriesData","computeGeojson","area","countryAlpha3Codes","ccn3","includes","merge","commonName","AREAS_LOAD_ACTION","AREAS_RECEIVE_ACTION","receiveAreasAction","areasLoadedSelector","areasSelector","areasReducer","rootReducer","combineReducers","enhancers","applyMiddleware","thunk","enhancer","composeWithDevTools","actionSanitizer","store","createStore","CountryType","PropTypes","shape","string","isRequired","alpha3Code","capital","number","latlng","arrayOf","object","MAP_HEIGHT","bool","sourceUrl","sourceDescriptionUrl","NA_COLOR","BORDER_COLOR","LEGEND_COLORS_COUNT","LEGEND_WIDTH","interpolator","d3Colors","WorldMap","props","selectedCountries","dependentCountries","currentStatistic","currentYear","minZoom","onMapChange","selectedCountryByCode","selectedData","maxValue","colorValueMap","scaleString","minValue","valueMap","scaleLinear","scaleLog","domain","color","computeColorMap","react_default","createElement","className","Map","zoom","zoomSnap","zoomDelta","center","style","height","zIndex","dragging","onZoomend","onMoveend","countryData","GeoJSON","key","ref","leafletElement","setStyle","weight","fillColor","fillOpacity","Tooltip","sticky","range","i","width","background","backgroundColor","defaultProps","StatisticDetails","descriptionLines","split","popover","title","arrowPointAtCenter","overlayStyle","maxWidth","content","stat","href","target","rel","placement","es_button","size","icon","marginRight","copyTextToClipboard","text","clipboard","writeText","textArea","document","body","appendChild","focus","select","execCommand","resolve","reject","Error","err","removeChild","fallbackCopyTextToClipboard","ShareChartComponent","dropdown","overlay","menu","onClick","domElement","offsetHeight","padding","offsetWidth","classFiltered","domToImage","toBlob","element","bgcolor","transform","chartToPngBlob","chartRef","current","blob","saveAs","message","error","compileNames","headers","dataLines","dataItem","csv","l","join","Blob","location","hashParts","link","origin","pathname","copyToClipboard","success","Item","theme","WITH_SCALE_SETTINGS","StatisticExplorer","onRowClick","setStatistic","setYear","setPerCapita","isLoaded","mapRef","setScale","countryByCode","formatedData","s","statisticByCategory","es_select","placeholder","optionFilterProp","showSearch","onChange","stats","OptGroup","label","sortBy","Option","slider","defaultValue","onAfterChange","debounce","included","marks","margin","left","right","es_radio","Group","marginBottom","buttonStyle","e","Button","disabled","components_ShareChartComponent","filename","replace","components_StatisticDetails","table","rowKey","pagination","dataSource","scroll","y","columns","dataIndex","sorter","b","localeCompare","render","defaultSortOrder","align","onRow","record","f","ConnectedWorldMap","connect","ConnectedStatisticExplorer","HomeView","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","React","createRef","setFilterBounds","getZoom","loadStatistic","newState","setState","_this2","history","_this$state","row","gutter","md","col","Component","loadStatisticOfCountries","forEach","loadStatisticOfCountriesAction","getStatisticOfAllCountries","countryWithAreasSelector","areasOfCountrySelector","areaWithCountriesSelector","areaCode","areaSelector","ChartSettings","perCapitaSwitch","stackedSwitch","stacked","setStacked","es_switch","checked","Loader","_this$props","load","prevProps","prevOtherProps","_this$props2","otherProps","equals","buildLoader","loadFunction","StatisticsLoader","defaultSelector","mapStateToProps","worldReference","mapOfCountryStatisticsInput","world","parsedMapOfCountryStatistics","mapOfCountryStatisticsToLoad","countryStatisticsToLoad","countryStatitics","countryStatisticsLoadedSelector","withCountryStatistics","mapOfCountryStatisticsSelectorInput","mapOfCountryStatisticsSelector","WrappedComponent","spin","spinning","defaultHeight","buildChart","_options$perCapitaSwi","_options$stackedSwitc","hocs","hasSettings","withStateHandlers","_ref$defaultPerCapita","defaultPerCapita","_ref$defaultStacked","defaultStacked","WrappedChart","compose","_Component","ChartWrapper","buttonRef","inherits","createClass","_this$props$perCapita","_this$props$stacked","statisticList","finalHeight","toLowerCase","descriptionStatistic","finalDescription","data-html2canvas-ignore","components_ChartSettings","assign","CustomTooltip","active","separator","payload","withTotal","displayFilter","totalFilter","units","filteredPayload","_payload$","_payload$$formatter","formatter","total","sum","totalUnit","_p$formatter","dataKey","BasicChart","withComparison","ResponsiveContainer","LineChart","Line","stroke","strokeWidth","dot","CartesianGrid","opacity","XAxis","interval","YAxis","component_Tooltip","props2","components_CustomTooltip","Legend","iconType","CustomGeoJSON","createGeoJSON","remove","leaflet","addTo","flyToBounds","withLeaflet","GeoJSONMap","boxZoom","doubleClickZoom","scrollWheelZoom","zoomControl","TileLayer","attribution","GeoJSONMap_GeoJSON","ScrollToTop","scrollTo","EnergyMixChart","fuelConsumed","coalUnit","LineArea","Area","defaultLineAreaProps","activeDot","lineAreaProps","stackId","some","console","warn","chartMax","ticks","getNiceTickValues","pop","ComposedChart","fill","EnergyMixChartBuilded","EnergyMixChartContainer","primaryMap","primaryReference","electrictyMap","electricityReference","SummaryTab","containers_EnergyMixChartContainer","marginTop","ProdConsoChart","fuel","consoStatistic","conso","prodStatistic","prod","dataWithImportAndExport","diff","toFixed","export","import","strokeOpacity","GDPByEnergyChart","ScatterChart","bottom","Scatter","cx","cy","r","line","dataMin","floor","dataMax","ceil","position","top","0","1","ProdConsoChartContainer","prodStatisticCode","consoStatisticCode","GDPByEnergyChartContainer","IndependencyTab","fuelProducedOrConsumed","sm","BasicChartContainer","ClimateTab","tabList","tab","IndependencyTabContainer","tabContent","summary","components_SummaryTab","independency","climate","components_ClimateTab","CountryView","goTo","currentTab","Redirect","to","flag","flagIcon","components_ScrollToTop","xs","card","Link","lg","maxHeight","src","alt","components_GeoJSONMap","activeTabKey","onTabChange","match","params","AboutView","AreaView_IndependencyTabContainer","AreaView","GitHubLink","HeaderMenu","mode","selectable","lineHeight","onSelect","SubMenu","components_GitHubLink","CountriesLoader","prop","AreasLoader","_getAreas","getAllAreas","ConnectedHeaderMenu","withRouter","scrollToAnchor","decodeURIComponent","slice","getElementById","scrollIntoView","AppLayout","onhashchange","startsWith","AppLayout_StatisticsLoader","layout","Header","Content","Switch","Route","path","exact","component","Footer","App","es","HashRouter","components_AppLayout","Boolean","hostname","ReactDOM","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9772b7fd.chunk.js","sourcesContent":["import { feature } from 'topojson-client';\nimport L from 'leaflet';\n\nfunction countryMapValues(country, worldTopo) {\n  const a = worldTopo.objects.countries.geometries.find(\n    c => c.id === country.numericCode,\n  );\n  const geojson = a && feature(worldTopo, a);\n  const bounds = a && L.geoJSON(geojson).getBounds();\n  return {\n    ...country,\n    geojson,\n    bounds,\n  };\n}\n\nasync function getAllCountries() {\n  const [countries, worldTopo] = await Promise.all(\n    [fetch('/data/countries.json'), fetch('/data/worldTopo.json')].map(p =>\n      p.then(res => res.json()),\n    ),\n  );\n  return countries.map(country => countryMapValues(country, worldTopo));\n}\n\nexport default getAllCountries;\n","import { values, indexBy, prop, mapObjIndexed } from 'ramda';\n\nimport getAllCountries from '../api/countries';\n\nexport const COUNTRIES_LOAD_ACTION = 'COUNTRIES_LOAD_ACTION';\nexport const COUNTRIES_RECEIVE_ACTION = 'COUNTRIES_RECEIVE_ACTION';\n\nconst defaultIndicators = {\n  // for areas\n  coal: true,\n  oil: true,\n  gas: true,\n  hydro: true,\n  nuclear: true,\n  biofuelsWaste: true,\n  solarWindTideGeoth: true,\n};\n\nfunction loadCountriesAction() {\n  return { type: COUNTRIES_LOAD_ACTION };\n}\n\nfunction receiveCountriesAction({ data, errors }) {\n  return { type: COUNTRIES_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllCountries() {\n  return function dispatchLoadAllCountries(dispatch) {\n    dispatch(loadCountriesAction());\n    return getAllCountries()\n      .then(data =>\n        dispatch(\n          receiveCountriesAction({\n            data: indexBy(prop('alpha2Code'), data),\n          }),\n        ),\n      )\n      .catch(errors => dispatch(receiveCountriesAction({ errors })));\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction countriesReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case COUNTRIES_LOAD_ACTION:\n      return { ...state, loading: true };\n    case COUNTRIES_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function countriesLoadedSelector(state) {\n  return state.countries.loaded;\n}\n\nexport function countriesSelector(state) {\n  return values(state.countries.data).filter(c => c.isIndependent);\n}\n\nexport function countriesInBounds(boundsFilter, state) {\n  const countries = countriesSelector(state);\n\n  return boundsFilter\n    ? countries.filter(\n        country => country.bounds && boundsFilter.intersects(country.bounds),\n      )\n    : countries;\n}\n\nexport function dependentCountriesSelector(state) {\n  return values(state.countries.data).filter(c => !c.isIndependent);\n}\n\nexport function countrySelector(countryCode, state) {\n  return state.countries.data[countryCode] || state.areas.data[countryCode];\n}\n\nexport function fuelConsumedCountrySelector(countryCode, state) {\n  const country = countrySelector(countryCode, state);\n  return country ? country.hasConsumed : defaultIndicators;\n}\n\nexport function fuelProducedCountrySelector(countryCode, state) {\n  const country = countrySelector(countryCode, state);\n  return country ? country.hasProduced : defaultIndicators;\n}\n\nexport function fuelProducedOrConsumedCountrySelector(countryCode, state) {\n  const country = countrySelector(countryCode, state);\n  return country\n    ? mapObjIndexed((v, k) => v || country.hasConsumed[k], country.hasProduced)\n    : defaultIndicators;\n}\n\nexport default countriesReducer;\n","import L from 'leaflet';\nimport { map, uniq, values, mergeAll } from 'ramda';\nimport domToImage from 'dom-to-image';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function coordsToLatLng(coords) {\n  const [longitude, latitude] = coords;\n\n  if (longitude < -168.51) {\n    return L.latLng(latitude, 360 + longitude);\n  }\n  return L.latLng(latitude, longitude).wrap();\n}\n\nexport function isMobileOrTablet() {\n  let check = false;\n  (function test(a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        a.substr(0, 4),\n      )\n    ) {\n      check = true;\n    }\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n}\n\nexport function formatNumber(value) {\n  if (value === null || value === undefined || Number.isNaN(value)) {\n    return 'NA';\n  }\n\n  return Number(Number(value).toPrecision(3)).toLocaleString();\n}\n\nexport function tickFormatter(value) {\n  return value.toLocaleString();\n}\n\nexport function displayUnit(unit, perCapita) {\n  return perCapita ? `${unit.base}/capita` : unit.main;\n}\n\nexport function parseMapOfStatistics(mapOfCountryStatistics, defaultCountry) {\n  return map(\n    statistics =>\n      typeof statistics === 'string'\n        ? { statisticCode: statistics, countryCode: defaultCountry }\n        : statistics,\n    mapOfCountryStatistics,\n  );\n}\n\nexport function addPopCountryStatistics(mapOfCountryStatistics, perCapita) {\n  if (!perCapita) {\n    return mapOfCountryStatistics;\n  }\n\n  const countryCodes = uniq(\n    values(mapOfCountryStatistics).map(d => d.countryCode),\n  );\n  const populations = mergeAll(\n    countryCodes.map(countryCode => ({\n      [`pop/${countryCode}`]: { statisticCode: 'POPULATION', countryCode },\n    })),\n  );\n  return {\n    ...populations,\n    ...mapOfCountryStatistics,\n  };\n}\n\nexport function chartToPngBlob(domElement, scale) {\n  const padding = 10;\n  const height = domElement.offsetHeight + padding * 2;\n  const width = domElement.offsetWidth + padding * 2;\n  const classFiltered = [\n    'ChartWrapper__header__right',\n    'leaflet-control-container',\n  ];\n  return domToImage.toBlob(domElement, {\n    filter: element => !classFiltered.includes(element.className),\n    bgcolor: 'white',\n    style: {\n      padding: `${padding}px`,\n      transform: `scale(${scale}) translate(${width / 2 / scale}px, ${height /\n        2 /\n        scale}px)`,\n    },\n    height: height * scale,\n    width: width * scale,\n  });\n}\n\nexport function memoize(\n  fn,\n  hashFunction = args => JSON.stringify(args),\n  cacheSize = 30,\n) {\n  const cache = {};\n  return function memoizedFun(...args) {\n    const hash = hashFunction(args);\n    if (cache[hash]) {\n      return cache[hash];\n    }\n    const res = fn(...args);\n\n    cache[hash] = res;\n\n    const hashes = Object.keys(cache);\n    if (hashes.length > cacheSize) {\n      delete cache[hashes[0]];\n    }\n\n    return res;\n  };\n}\n","import { values, mapObjIndexed, mergeAll, groupBy, map, omit } from 'ramda';\nimport { countriesSelector } from '../countries';\nimport {\n  parseMapOfStatistics,\n  addPopCountryStatistics,\n  memoize,\n} from '../../utils';\n\nexport function statisticsLoadedSelector(state) {\n  return state.statistics.loaded;\n}\n\nexport function allStatisticsSelector(state) {\n  return values(state.statistics.data);\n}\n\nexport function statisticSelector(statisticCode, state) {\n  return state.statistics.data[statisticCode];\n}\n\nexport function countryStatisticSelector(\n  { statisticCode, countryCode },\n  state,\n) {\n  const statistic = statisticSelector(statisticCode, state);\n  return statistic && statistic.values[countryCode];\n}\n\nexport function countryStatisticLoadedSelector(\n  { statisticCode, countryCode },\n  state,\n) {\n  const statistic = statisticSelector(statisticCode, state);\n  if (statistic.compute) {\n    return values(statistic.source).every(sourceCode =>\n      countryStatisticLoadedSelector(\n        { statisticCode: sourceCode, countryCode },\n        state,\n      ),\n    );\n  }\n\n  const countryStatistic = countryStatisticSelector(\n    {\n      statisticCode,\n      countryCode,\n    },\n    state,\n  );\n  return countryStatistic ? countryStatistic.loaded : false;\n}\n\nfunction computeDerivedValueFromCompiled(statistic) {\n  return function compute({ year, ...sources }) {\n    const value = statistic.compute(sources);\n    return Number.isNaN(value) || !Number.isFinite(value)\n      ? { year, value: null }\n      : { year, value };\n  };\n}\n\nexport function countryStatisticValuesSelector(\n  { statisticCode, countryCode },\n  state,\n) {\n  const statistic = statisticSelector(statisticCode, state);\n\n  if (statistic.compute) {\n    // eslint-disable-next-line no-use-before-define\n    return compiledCountryStatisticsSelector(\n      {\n        mapOfCountryStatistics: statistic.source,\n        countryCode,\n      },\n      state,\n    ).map(computeDerivedValueFromCompiled(statistic));\n  }\n\n  const countryStatistic = countryStatisticSelector(\n    {\n      statisticCode,\n      countryCode,\n    },\n    state,\n  );\n  return countryStatistic ? countryStatistic.values : [];\n}\n\nexport function countryStatisticsLoadedSelector(countryStatitics, state) {\n  return countryStatitics.every(countryStatistic =>\n    countryStatisticLoadedSelector(countryStatistic, state),\n  );\n}\n\nexport function statisticOfAllCountriesLoadedSelector(statisticCode, state) {\n  const countryCodes = countriesSelector(state).map(\n    country => country.alpha2Code,\n  );\n  return countryCodes.every(countryCode =>\n    countryStatisticLoadedSelector({ statisticCode, countryCode }, state),\n  );\n}\n\nfunction computeYearInterval(mapOfStatisticValues) {\n  const arrayOfStatisticValues = values(mapOfStatisticValues);\n  const startingYears = arrayOfStatisticValues.map(statisticValues =>\n    Math.min(...statisticValues.map(v => v.year)),\n  );\n  const endingYears = arrayOfStatisticValues.map(statisticValues =>\n    Math.max(...statisticValues.map(v => v.year)),\n  );\n  const startingYear = Math.max(...startingYears);\n  const endingYear = Math.min(...endingYears);\n  return [startingYear, endingYear];\n}\n\nfunction computeValue(value, population, perCapita, factor, populationFactor) {\n  if (value === null || (perCapita && !population)) {\n    return null;\n  }\n\n  return perCapita ? (value * factor) / (populationFactor * population) : value;\n}\n\nfunction compiledCountryStatisticsSelectorFn(\n  { mapOfCountryStatistics: baseMap, countryCode, perCapita },\n  state,\n) {\n  const parsedMapOfCountryStatistics = parseMapOfStatistics(\n    baseMap,\n    countryCode,\n  );\n  const mapOfCountryStatistics = addPopCountryStatistics(\n    parsedMapOfCountryStatistics,\n    perCapita,\n  );\n  const mapOfStatistic = map(\n    ({ statisticCode }) => statisticSelector(statisticCode, state),\n    mapOfCountryStatistics,\n  );\n  const mapOfStatisticValues = map(\n    countryStatistic => countryStatisticValuesSelector(countryStatistic, state),\n    mapOfCountryStatistics,\n  );\n  const [startingYear, endingYear] = computeYearInterval(mapOfStatisticValues);\n\n  const mapOfNamedStatisticValues = mapObjIndexed(\n    (statisticValues, compileName) =>\n      statisticValues.map(({ year, value }) => ({\n        year,\n        [compileName]: value,\n      })),\n    mapOfStatisticValues,\n  );\n  const allValues = [].concat(...values(mapOfNamedStatisticValues));\n  const allValuesByYear = groupBy(value => value.year, allValues);\n\n  const compiledStatistics = Object.keys(allValuesByYear)\n    .map(year => Number(year))\n    .filter(year => startingYear <= year && year <= endingYear)\n    .sort()\n    .map(year => mergeAll(allValuesByYear[year]))\n    .map(compiledValue => ({\n      ...compiledValue,\n      ...mapObjIndexed((value, compileName) => {\n        const popCompileName = `pop/${\n          mapOfCountryStatistics[compileName].countryCode\n        }`;\n        return computeValue(\n          value,\n          compiledValue[popCompileName],\n          perCapita,\n          mapOfStatistic[compileName].unit.factor,\n          mapOfStatistic[popCompileName]\n            ? mapOfStatistic[popCompileName].unit.factor\n            : null,\n        );\n      }, omit(['year'], compiledValue)),\n    }));\n\n  return compiledStatistics;\n}\nexport const compiledCountryStatisticsSelector = memoize(\n  compiledCountryStatisticsSelectorFn,\n  args => JSON.stringify(args[0]),\n);\n\nexport function compiledStatisticForCountriesAndYear(\n  { statisticCode, year, perCapita },\n  state,\n) {\n  const countryCodes = countriesSelector(state).map(c => c.alpha2Code);\n  const mapOfCountryStatistics = {\n    value: statisticCode,\n  };\n  countryCodes.push('WORLD');\n\n  const countryValues = countryCodes.map(countryCode => {\n    const countryStatisticValues = compiledCountryStatisticsSelector(\n      { mapOfCountryStatistics, countryCode, perCapita },\n      state,\n    );\n    const yearValue = countryStatisticValues.find(v => v.year === year);\n\n    return {\n      countryCode,\n      value: yearValue ? yearValue.value : null,\n    };\n  });\n  return countryValues;\n}\n\nexport function statisticSourcesSelector(statisticCodes, state) {\n  return statisticCodes.reduce((statisticSources, statisticCode) => {\n    const statistic = statisticSelector(statisticCode, state);\n\n    if (statistic.compute) {\n      const sources = values(statistic.source).map(code =>\n        statisticSelector(code, state),\n      );\n      return statisticSources.concat(sources);\n    }\n\n    return statisticSources.concat([statistic]);\n  }, []);\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport function fetchJSON(url, options) {\n  return fetch(url, options).then(res => res.json());\n}\n","const PERCENTAGE_UNIT = {\n  main: '%',\n  base: '%',\n  factor: 1,\n};\n\nconst MTOE_UNIT = {\n  main: 'Mtoe',\n  base: 'toe',\n  factor: 10 ** 6,\n};\n\nconst TWH_UNIT = {\n  main: 'TWh',\n  base: 'kWh',\n  factor: 10 ** 9,\n};\n\nconst ENERGY_INTENSITY_UNIT = {\n  main: 'toe/million 2010 $',\n  base: 'toe/million 2010 $',\n  factor: 1,\n};\n\nconst CO2_INTENSITY_OF_ENERGY_UNIT = {\n  main: 'tCO2/toe',\n  base: 'tCO2/toe',\n  factor: 1,\n};\n\n// TODO factorize with dataSources\nconst MTOE_TO_TWH = 11.63;\nconst POWER_PLANT_EFFICIENCIES = {\n  NUCLEAR: 0.33,\n  HYDRO: 1, // definition of statistics\n};\n\nconst derivedStatistics = [\n  {\n    code: 'ENERGY_SELF_SUFFICIENCY',\n    name: 'Energy Self-sufficiency',\n    description:\n      'This indicator made up by dividing primary energy consumption by primary energy production, gives an indication on the level of self-sufficiency (or dependency) of a country.',\n    unit: PERCENTAGE_UNIT,\n    source: {\n      consumption: 'PRIMARY_ENERGY_CONSUMPTION_MTOE',\n      production: 'PRIMARY_ENERGY_PRODUCTION_MTOE',\n    },\n    startingYear: 1973,\n    endingYear: 2016,\n    sourceAttribution: 'IEA',\n    category: 'Others',\n    isIntensive: true,\n    compute({ consumption, production }) {\n      return (production / consumption) * 100;\n    },\n  },\n  {\n    code: 'ENERGY_INTENSITY',\n    name: 'Energy Intensity',\n    description: '',\n    unit: ENERGY_INTENSITY_UNIT,\n    source: {\n      energy: 'PRIMARY_ENERGY_CONSUMPTION_MTOE',\n      gdp: 'GDP_2010_USD',\n    },\n    startingYear: 1973,\n    endingYear: 2016,\n    sourceAttribution: 'IEA, World Bank',\n    category: 'Climate change',\n    isIntensive: true,\n    compute({ energy, gdp }) {\n      return (energy / gdp) * 10 ** 3;\n    },\n  },\n  {\n    code: 'CO2_INTENSITY_OF_ENERGY',\n    name: 'CO2 Intensity of energy',\n    description:\n      'Measures the mass of CO2 by unit of energy that is emitted by the country.',\n    unit: CO2_INTENSITY_OF_ENERGY_UNIT,\n    source: {\n      co2: 'FOSSIL_CO2_EMISSIONS_MT',\n      energy: 'PRIMARY_ENERGY_CONSUMPTION_MTOE',\n    },\n    startingYear: 1973,\n    endingYear: 2016,\n    sourceAttribution: 'IEA, World Bank',\n    category: 'Climate change',\n    isIntensive: true,\n    scale: 'linear',\n    compute({ energy, co2 }) {\n      return co2 / energy;\n    },\n  },\n  {\n    code: 'RENEWABLES_PRODUCTION_MTOE',\n    name: 'Renewables production',\n    description: 'Includes hydroelectricity, solar, wind and tide productions.',\n    unit: MTOE_UNIT,\n    source: {\n      hydro: 'HYDRO_PRODUCTION_MTOE',\n      geothSolarWindTide: 'GEOTH_SOLAR_WIND_TIDE_PRODUCTION_MTOE',\n    },\n    startingYear: 1973,\n    endingYear: 2016,\n    sourceAttribution: 'IEA',\n    category: 'Productions',\n    compute({ hydro, geothSolarWindTide }) {\n      return hydro + geothSolarWindTide;\n    },\n  },\n  {\n    code: 'LOW_CARBON_ENERGY_PRODUCTION_MTOE',\n    name: 'Low-carbon energy production',\n    description:\n      'Includes renewables and nuclear productions. Excludes biofuels at the moment.',\n    unit: MTOE_UNIT,\n    source: {\n      hydro: 'HYDRO_PRODUCTION_MTOE',\n      geothSolarWindTide: 'GEOTH_SOLAR_WIND_TIDE_PRODUCTION_MTOE',\n      nuclear: 'NUCLEAR_PRODUCTION_MTOE',\n    },\n    startingYear: 1973,\n    endingYear: 2016,\n    sourceAttribution: 'IEA',\n    category: 'Productions',\n    compute({ hydro, geothSolarWindTide, nuclear }) {\n      return hydro + geothSolarWindTide + nuclear;\n    },\n  },\n  {\n    code: 'NUCLEAR_GENERATION_TWH',\n    name: 'Electricity generation from nuclear',\n    description: '',\n    unit: TWH_UNIT,\n    source: {\n      nuclear: 'NUCLEAR_PRODUCTION_MTOE',\n    },\n    startingYear: 1973,\n    endingYear: 2016,\n    sourceAttribution: 'IEA',\n    category: 'Electricity',\n    compute({ nuclear }) {\n      return nuclear * POWER_PLANT_EFFICIENCIES.NUCLEAR * MTOE_TO_TWH;\n    },\n  },\n  {\n    code: 'HYDRO_GENERATION_TWH',\n    name: 'Electricity generation from hydro',\n    description: '',\n    unit: TWH_UNIT,\n    source: {\n      hydro: 'HYDRO_PRODUCTION_MTOE',\n    },\n    startingYear: 1973,\n    endingYear: 2016,\n    sourceAttribution: 'IEA',\n    category: 'Electricity',\n    compute({ hydro }) {\n      return hydro * POWER_PLANT_EFFICIENCIES.HYDRO * MTOE_TO_TWH;\n    },\n  },\n];\n\nexport default derivedStatistics;\n","import { values, indexBy, prop } from 'ramda';\n\nimport {\n  getAllStatistics,\n  getStatisticOfAllCountries,\n  getStatisticOfCountry,\n} from '../../api/statistics';\nimport { countriesSelector } from '../countries';\n\nimport { statisticSelector, countryStatisticLoadedSelector } from './selectors';\n\nexport const STATISTICS_LOAD_ACTION = 'STATISTICS_LOAD_ACTION';\nexport const STATISTICS_RECEIVE_ACTION = 'STATISTICS_RECEIVE_ACTION';\nexport const COUNTRY_STATISTIC_LOAD_ACTION = 'COUNTRY_STATISTIC_LOAD_ACTION';\nexport const COUNTRY_STATISTIC_RECEIVE_ACTION =\n  'COUNTRY_STATISTIC_RECEIVE_ACTION';\nexport const STATISTIC_LOAD_ALL_COUNTRIES_ACTION =\n  'STATISTIC_LOAD_ALL_COUNTRIES_ACTION';\nexport const STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION =\n  'STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION';\n\nfunction loadStatisticsAction() {\n  return { type: STATISTICS_LOAD_ACTION };\n}\n\nfunction receiveStatisticsAction({ data, errors }) {\n  return { type: STATISTICS_RECEIVE_ACTION, data, errors };\n}\n\nfunction loadCountryStatisticAction(statisticCode, countryCode) {\n  return { type: COUNTRY_STATISTIC_LOAD_ACTION, statisticCode, countryCode };\n}\n\nfunction receiveCountryStatisticAction({\n  countryCode,\n  statisticCode,\n  data,\n  errors,\n}) {\n  return {\n    type: COUNTRY_STATISTIC_RECEIVE_ACTION,\n    countryCode,\n    statisticCode,\n    data,\n    errors,\n  };\n}\n\nfunction loadStatisticOfCountriesAction(statisticCode, countries) {\n  return {\n    type: STATISTIC_LOAD_ALL_COUNTRIES_ACTION,\n    statisticCode,\n    countries,\n  };\n}\n\nfunction receiveStatisticOfCountriesAction({\n  statisticCode,\n  countries,\n  data,\n  errors,\n}) {\n  return {\n    type: STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION,\n    countries,\n    statisticCode,\n    data,\n    errors,\n  };\n}\n\nexport function loadAllStatistics() {\n  return function dispatchLoadStatistics(dispatch) {\n    dispatch(loadStatisticsAction());\n\n    return getAllStatistics()\n      .then(data => {\n        const statistics = data.map(statistic => ({\n          ...statistic,\n          values: {},\n        }));\n        dispatch(\n          receiveStatisticsAction({\n            data: indexBy(prop('code'), statistics),\n          }),\n        );\n      })\n      .catch(errors => dispatch(receiveStatisticsAction({ errors })));\n  };\n}\n\nexport function loadCountryStatistic({ statisticCode, countryCode }) {\n  return function dispatchLoadCountryStatistic(dispatch, getState) {\n    const state = getState();\n    const statistic = statisticSelector(statisticCode, state);\n\n    if (statistic.compute) {\n      const sourceCodes = values(statistic.source);\n      const countryStatistics = sourceCodes.map(sourceCode => ({\n        statisticCode: sourceCode,\n        countryCode,\n      }));\n      dispatch(\n        // eslint-disable-next-line no-use-before-define\n        loadCountryStatistics(countryStatistics),\n      );\n      return;\n    }\n\n    if (countryStatisticLoadedSelector({ statisticCode, countryCode }, state)) {\n      return;\n    }\n\n    dispatch(loadCountryStatisticAction(statisticCode, countryCode));\n\n    getStatisticOfCountry(statisticCode, countryCode)\n      .then(res => {\n        const data = res.map(statisticValue => ({\n          year: statisticValue.year,\n          value: statisticValue.value,\n        }));\n\n        dispatch(\n          receiveCountryStatisticAction({ countryCode, statisticCode, data }),\n        );\n      })\n      .catch(errors =>\n        dispatch(\n          receiveCountryStatisticAction({ statisticCode, countryCode, errors }),\n        ),\n      );\n  };\n}\n\n// TODO\nexport function loadCountryStatistics(countryStatistics) {\n  return function dispatchloadCountryStatistics(dispatch) {\n    return Promise.all(\n      countryStatistics.map(countryStatistic =>\n        dispatch(loadCountryStatistic(countryStatistic)),\n      ),\n    );\n  };\n}\n\nexport function loadStatisticOfCountries(statisticCode) {\n  return function dispatchLoadStatisticOfCountries(dispatch, getState) {\n    const state = getState();\n    const statistic = statisticSelector(statisticCode, state);\n\n    if (statistic.compute) {\n      values(statistic.source).forEach(sourceCode =>\n        dispatch(loadStatisticOfCountries(sourceCode)),\n      );\n    }\n\n    const countries = countriesSelector(state);\n    const isLoaded = countries.every(country =>\n      countryStatisticLoadedSelector(\n        { statisticCode, countryCode: country.alpha2Code },\n        state,\n      ),\n    );\n\n    if (isLoaded) {\n      return;\n    }\n\n    dispatch(loadStatisticOfCountriesAction(statisticCode, countries));\n    getStatisticOfAllCountries(statisticCode)\n      .then(data =>\n        dispatch(\n          receiveStatisticOfCountriesAction({\n            statisticCode,\n            countries,\n            data,\n          }),\n        ),\n      )\n      .catch(errors =>\n        dispatch(\n          receiveStatisticOfCountriesAction({\n            statisticCode,\n            countries,\n            errors,\n          }),\n        ),\n      );\n  };\n}\n","import { fetchJSON } from './helpers';\nimport derivedStatistics from './derivedStatistics';\n\nexport function getAllStatistics() {\n  return fetchJSON('/data/statistics.json').then(statistics =>\n    statistics.concat(derivedStatistics),\n  );\n}\n\nexport function getStatisticOfCountry(statisticCode, countryCode) {\n  return fetchJSON(`/data/${statisticCode}/${countryCode}.json`);\n}\n\nexport function getStatisticOfAllCountries(statisticCode) {\n  return fetchJSON(`/data/${statisticCode}/all.json`);\n}\n","import { omit } from 'ramda';\nimport {\n  COUNTRY_STATISTIC_RECEIVE_ACTION,\n  COUNTRY_STATISTIC_LOAD_ACTION,\n  STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION,\n  STATISTICS_LOAD_ACTION,\n  STATISTICS_RECEIVE_ACTION,\n  STATISTIC_LOAD_ALL_COUNTRIES_ACTION,\n} from './actions';\n\nconst initialCountryStatistic = {\n  loading: true,\n  loaded: false,\n  errors: null,\n  values: [],\n};\nfunction countryStatisticReducer(\n  countryStatistic = initialCountryStatistic,\n  action,\n  countryCode,\n) {\n  switch (action.type) {\n    case COUNTRY_STATISTIC_RECEIVE_ACTION:\n      return {\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        values: action.data || [],\n      };\n    case STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION:\n      return {\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        values:\n          (action.data &&\n            action.data\n              .filter(d => d.countryCode === countryCode)\n              .map(omit(['countryCode']))) ||\n          [],\n      };\n    default:\n      return countryStatistic;\n  }\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\nfunction statisticsReducer(state = initialState, action) {\n  switch (action.type) {\n    case STATISTICS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case STATISTICS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    case COUNTRY_STATISTIC_LOAD_ACTION:\n    case COUNTRY_STATISTIC_RECEIVE_ACTION: {\n      const statistic = state.data[action.statisticCode];\n      const countryStatistic = statistic.values[action.countryCode];\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.statisticCode]: {\n            ...statistic,\n            values: {\n              ...statistic.values,\n              [action.countryCode]: countryStatisticReducer(\n                countryStatistic,\n                action,\n              ),\n            },\n          },\n        },\n      };\n    }\n    case STATISTIC_LOAD_ALL_COUNTRIES_ACTION: {\n      const statistic = state.data[action.statisticCode];\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.statisticCode]: {\n            ...statistic,\n            values: {\n              ...statistic.values,\n              ...action.countries.reduce(\n                (acc, country) => ({\n                  ...acc,\n                  [country.alpha2Code]: countryStatisticReducer(\n                    undefined,\n                    action,\n                    country.alpha2Code,\n                  ),\n                }),\n                {},\n              ),\n            },\n          },\n        },\n      };\n    }\n    case STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION: {\n      const statistic = state.data[action.statisticCode];\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.statisticCode]: {\n            ...statistic,\n            values: {\n              ...statistic.values,\n              ...action.countries.reduce(\n                (acc, country) => ({\n                  ...acc,\n                  [country.alpha2Code]: countryStatisticReducer(\n                    statistic.values[country.alpha2Code],\n                    action,\n                    country.alpha2Code,\n                  ),\n                }),\n                {},\n              ),\n              WORLD: countryStatisticReducer(\n                statistic.values.WORLD,\n                action,\n                'WORLD',\n              ),\n            },\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default statisticsReducer;\n","import worldTopo from 'world-atlas/world/110m.json';\nimport countriesData from 'world-countries/countries';\nimport { merge } from 'topojson-client';\nimport { indexBy } from 'ramda';\n\nconst indexedCountries = indexBy(c => c.cca2, countriesData);\n\nfunction computeGeojson(area) {\n  const countryAlpha3Codes = area.countryCodes.map(\n    countryCode => indexedCountries[countryCode].ccn3,\n  );\n  const geometries = worldTopo.objects.countries.geometries.filter(c =>\n    countryAlpha3Codes.includes(c.id),\n  );\n  return merge(worldTopo, geometries);\n}\n\nexport default async function getAreas() {\n  const res = await fetch('/data/areas.json');\n  const data = await res.json();\n\n  return data.map(area => ({\n    ...area,\n    alpha2Code: area.code,\n    commonName: area.name,\n    geojson: area.countryCodes ? computeGeojson(area) : null,\n  }));\n}\n","import { values, indexBy, prop } from 'ramda';\n\nimport getAllAreas from '../api/areas';\n\nexport const AREAS_LOAD_ACTION = 'AREAS_LOAD_ACTION';\nexport const AREAS_RECEIVE_ACTION = 'AREAS_RECEIVE_ACTION';\n\nfunction loadAreasAction() {\n  return { type: AREAS_LOAD_ACTION };\n}\n\nfunction receiveAreasAction({ data, errors }) {\n  return { type: AREAS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllAreas() {\n  return function dispatchLoadAllAreas(dispatch) {\n    dispatch(loadAreasAction());\n    return getAllAreas()\n      .then(data =>\n        dispatch(\n          receiveAreasAction({\n            data: indexBy(prop('code'), data),\n          }),\n        ),\n      )\n      .catch(errors => dispatch(receiveAreasAction({ errors })));\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction areasReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case AREAS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case AREAS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function areasLoadedSelector(state) {\n  return state.areas.loaded;\n}\n\nexport function areasSelector(state) {\n  return values(state.areas.data);\n}\n\nexport function areaSelector(areaCode, state) {\n  return state.areas.data[areaCode];\n}\n\nexport function areasOfCountrySelector(countryCode, state) {\n  return values(state.areas.data).filter(\n    area => area.countryCodes && area.countryCodes.includes(countryCode),\n  );\n}\n\nexport default areasReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport countriesReducer from './countries';\nimport statisticsReducer, {\n  COUNTRY_STATISTIC_RECEIVE_ACTION,\n  STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION,\n} from './statistics';\nimport areasReducer from './areas';\n\nfunction actionSanitizer(action) {\n  if (\n    (action.type === COUNTRY_STATISTIC_RECEIVE_ACTION ||\n      action.type === STATISTIC_RECEIVE_ALL_COUNTRIES_ACTION) &&\n    action.data\n  ) {\n    return { ...action, data: 'DATA' };\n  }\n  return action;\n}\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  countries: countriesReducer,\n  statistics: statisticsReducer,\n  areas: areasReducer,\n});\n\nconst enhancers = [applyMiddleware(thunk)];\nconst composeEnhancers = composeWithDevTools({\n  actionSanitizer,\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import PropTypes from 'prop-types';\n\nexport const CountryType = PropTypes.shape({\n  alpha2Code: PropTypes.string.isRequired,\n  alpha3Code: PropTypes.string.isRequired,\n  commonName: PropTypes.string.isRequired,\n  capital: PropTypes.string.isRequired,\n  area: PropTypes.number.isRequired,\n  latlng: PropTypes.arrayOf(PropTypes.number).isRequired,\n  geojson: PropTypes.object,\n});\n\nexport const StatisticType = PropTypes.shape({\n  code: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  unit: PropTypes.shape({\n    main: PropTypes.string.isRequired,\n    base: PropTypes.string.isRequired,\n  }),\n  perCapita: PropTypes.bool,\n  startingYear: PropTypes.number.isRequired,\n  endingYear: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired,\n  sourceAttribution: PropTypes.string,\n  sourceUrl: PropTypes.string,\n  sourceDescriptionUrl: PropTypes.string,\n});\n\nexport const StatisticValues = PropTypes.arrayOf(\n  PropTypes.shape({\n    year: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  }),\n);\n\nexport const AreaType = PropTypes.shape({\n  code: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  countryCodes: PropTypes.arrayOf(PropTypes.string),\n  countries: PropTypes.arrayOf(CountryType),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { indexBy, map, range } from 'ramda';\nimport { scaleLog, scaleLinear } from 'd3-scale';\nimport * as d3Colors from 'd3-scale-chromatic';\n\nimport { Map, Tooltip, GeoJSON } from 'react-leaflet';\n\nimport { CountryType, StatisticType } from '../../../utils/types';\nimport {\n  coordsToLatLng,\n  isMobileOrTablet,\n  formatNumber,\n  displayUnit,\n} from '../../../utils';\n\nconst MAP_HEIGHT = '540px';\nconst NA_COLOR = '#888';\nconst BORDER_COLOR = 'black';\nconst LEGEND_COLORS_COUNT = 4;\nconst LEGEND_WIDTH = 300; // px\nconst COLORS_SCHEME = 'YlGnBu';\n\nconst interpolator = d3Colors[`interpolate${COLORS_SCHEME}`];\n\nfunction computeColorMap(data, scaleString) {\n  const maxValue = Math.max(...data.map(d => d.value));\n  const minValue = Math.min(...data.filter(d => d.value).map(d => d.value));\n  const valueMap = map(d => d.value, indexBy(d => d.countryCode, data));\n  const scaleType = scaleString === 'linear' ? scaleLinear() : scaleLog();\n  const scale = scaleType.domain([minValue, maxValue]);\n\n  const colorMap = map(value => {\n    if (value === null || value === undefined) {\n      return { color: NA_COLOR, value };\n    }\n    if (value === 0) {\n      return { color: interpolator(0), value };\n    }\n    return {\n      color: interpolator(scale(value)),\n      value,\n    };\n  }, valueMap);\n  return colorMap;\n}\n\nfunction WorldMap(props) {\n  const {\n    selectedCountries,\n    countries,\n    dependentCountries,\n    data,\n    currentStatistic,\n    currentYear,\n    perCapita,\n    scale,\n    minZoom,\n    onMapChange,\n  } = props;\n  const selectedCountryByCode = indexBy(c => c.alpha2Code, selectedCountries);\n  const selectedData = data.filter(\n    d => d.countryCode !== 'WORLD' && selectedCountryByCode[d.countryCode],\n  );\n  const maxValue = Math.max(...selectedData.map(d => d.value));\n  const colorValueMap = computeColorMap(\n    selectedData,\n    currentStatistic.scale || scale,\n  );\n  return (\n    <div className=\"WorldMap\">\n      <div className=\"WorldMap__yearLabel\">{currentYear}</div>\n      <Map\n        minZoom={minZoom}\n        zoom={minZoom}\n        zoomSnap={0.1}\n        zoomDelta={0.5}\n        center={[20, 30]}\n        style={{ height: MAP_HEIGHT, zIndex: 0 }}\n        dragging={!isMobileOrTablet()}\n        onZoomend={onMapChange}\n        onMoveend={onMapChange}\n      >\n        {countries.map(country => {\n          const countryData = colorValueMap[country.alpha2Code];\n          return (\n            <GeoJSON\n              key={country.alpha2Code + currentStatistic.code}\n              data={country.geojson}\n              coordsToLatLng={coordsToLatLng}\n              ref={ref =>\n                ref &&\n                ref.leafletElement.setStyle({\n                  color: BORDER_COLOR,\n                  weight: 0.5,\n                  fillColor: countryData ? countryData.color : NA_COLOR,\n                  fillOpacity: 1,\n                })\n              }\n            >\n              <Tooltip sticky>\n                {`${country.commonName}: ${formatNumber(\n                  countryData && countryData.value,\n                )}`}\n              </Tooltip>\n            </GeoJSON>\n          );\n        })}\n        {dependentCountries.map(country => (\n          <GeoJSON\n            key={country.alpha2Code}\n            data={country.geojson}\n            style={{\n              fillOpacity: 1,\n              color: 'white',\n              weight: 0.5,\n              fillColor: NA_COLOR,\n            }}\n          />\n        ))}\n      </Map>\n      <div className=\"WorldMap__legend\">\n        <div>\n          <div>\n            {`${currentStatistic.name} (${displayUnit(\n              currentStatistic.unit,\n              perCapita,\n            )})`}\n          </div>\n          <div className=\"WorldMap__legend__colors\">\n            <div>\n              <div className=\"WorldMap__legend__gradient\">\n                {range(0, LEGEND_COLORS_COUNT).map(i => (\n                  <div\n                    key={i}\n                    className=\"WorldMap__legend__gradient__item\"\n                    style={{\n                      width: LEGEND_WIDTH / LEGEND_COLORS_COUNT,\n                      background: `linear-gradient(to right, ${interpolator(\n                        i / LEGEND_COLORS_COUNT,\n                      )}, ${interpolator((i + 1) / LEGEND_COLORS_COUNT)}`,\n                    }}\n                  />\n                ))}\n              </div>\n              <div className=\"WorldMap__legend__gradientRange\">\n                <div>0</div>\n                <div>{formatNumber(maxValue)}</div>\n              </div>\n            </div>\n            <div>\n              <div\n                className=\"WorldMap__legend__NA__square\"\n                style={{ backgroundColor: NA_COLOR }}\n              />\n              <div>NA</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nWorldMap.propTypes = {\n  selectedCountries: PropTypes.arrayOf(CountryType).isRequired,\n  countries: PropTypes.arrayOf(CountryType).isRequired,\n  dependentCountries: PropTypes.arrayOf(CountryType).isRequired,\n  currentStatistic: StatisticType.isRequired,\n  currentYear: PropTypes.number.isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      countryCode: PropTypes.string.isRequired,\n      value: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n  perCapita: PropTypes.bool.isRequired,\n  scale: PropTypes.string,\n  minZoom: PropTypes.number,\n  onMapChange: PropTypes.func.isRequired,\n};\n\nWorldMap.defaultProps = {\n  scale: null,\n  minZoom: 1.8,\n};\n\nexport default WorldMap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Popover, Button } from 'antd';\n\nimport { StatisticType } from '../utils/types';\n\nfunction StatisticDetails(props) {\n  const { statisticSources, description } = props;\n  const descriptionLines = description && description.split('\\n');\n\n  return (\n    <div className=\"StatisticDetails\">\n      <Popover\n        title=\"Details\"\n        arrowPointAtCenter\n        overlayStyle={{ maxWidth: '300px' }}\n        content={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div>\n            {description && (\n              <div>\n                <strong>Description : </strong>\n                {`${descriptionLines[0]}`}\n              </div>\n            )}\n            <div>\n              <strong>\n                {`Source${statisticSources.length > 1 ? 's' : ''}`}\n              </strong>\n              <ul className=\"StatisticDetails__sources\">\n                {statisticSources.map(stat => (\n                  <li key={stat.code}>\n                    <a\n                      href={stat.sourceUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {`${stat.name} (${stat.sourceAttribution})`}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        }\n        placement=\"bottomRight\"\n      >\n        <Button\n          size=\"small\"\n          icon=\"info-circle\"\n          style={{ marginRight: '5px' }}\n        />\n      </Popover>\n    </div>\n  );\n}\n\nStatisticDetails.propTypes = {\n  description: PropTypes.string,\n  statisticSources: PropTypes.arrayOf(StatisticType).isRequired,\n};\n\nStatisticDetails.defaultProps = {\n  description: null,\n};\n\nexport default StatisticDetails;\n","function fallbackCopyTextToClipboard(text) {\n  const textArea = document.createElement('textarea');\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    const successful = document.execCommand('copy');\n    return successful\n      ? Promise.resolve()\n      : Promise.reject(new Error('fallbackCopyTextToClipboard error'));\n  } catch (err) {\n    document.body.removeChild(textArea);\n    throw Promise.reject(err);\n  }\n}\nfunction copyTextToClipboard(text) {\n  return navigator.clipboard\n    ? navigator.clipboard.writeText(text)\n    : fallbackCopyTextToClipboard(text);\n}\n\nexport default copyTextToClipboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { saveAs } from 'file-saver';\n\nimport { Button, Dropdown, Menu, Icon, message } from 'antd';\nimport { chartToPngBlob } from '../utils';\nimport copyToClipboard from '../utils/copyToClipboard';\n\nfunction ShareChartComponent(props) {\n  const { id } = props;\n  return (\n    <div className=\"ShareChartComponent\">\n      <Dropdown\n        overlay={\n          // eslint-disable-next-line\n          <Menu\n            onClick={({ key }) => {\n              if (key === 'png') {\n                const { chartRef } = props;\n                chartToPngBlob(chartRef.current, 2)\n                  .then(blob => saveAs(blob, `${id}.png`))\n                  .catch(() => message.error('An error occured !'));\n              } else if (key === 'csv') {\n                const { data, statistics } = props;\n                const compileNames = Object.keys(statistics);\n                const headers = compileNames.map(\n                  compileName => statistics[compileName].code,\n                );\n                const dataLines = data.map(dataItem =>\n                  compileNames.map(compileName => dataItem[compileName]),\n                );\n                const lines = [headers, ...dataLines];\n                const csv = lines.map(l => l.join(',')).join('\\n');\n                const blob = new Blob([csv], {\n                  type: 'text/plain;charset=utf-8',\n                });\n                saveAs(blob, `${id}.csv`);\n              } else if (key === 'link') {\n                const { location } = window;\n                const hashParts = location.hash.split('#');\n\n                const link = `${location.origin + location.pathname}#${\n                  hashParts[1]\n                }#${id}`;\n                copyToClipboard(link)\n                  .then(() => message.success('Copied !'))\n                  .catch(() => message.error('An error occured !'));\n              }\n            }}\n          >\n            <Menu.Item key=\"link\">\n              <Icon type=\"copy\" theme=\"filled\" />\n              Copy link\n            </Menu.Item>\n            <Menu.Item key=\"png\">\n              <Icon type=\"picture\" theme=\"filled\" />\n              .png\n            </Menu.Item>\n            <Menu.Item key=\"csv\">\n              <Icon type=\"file-text\" theme=\"filled\" />\n              .csv\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <Button size=\"small\" icon=\"share-alt\" style={{ marginRight: '5px' }} />\n      </Dropdown>\n    </div>\n  );\n}\n\nShareChartComponent.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  chartRef: PropTypes.any.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  statistics: PropTypes.object.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ShareChartComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Select, Slider, Radio, Popover, Button, Icon } from 'antd';\nimport debounce from 'lodash.debounce';\n\nimport { sortBy, groupBy, indexBy } from 'ramda';\n\nimport StatisticDetails from '../../../components/StatisticDetails';\nimport ShareChartComponent from '../../../components/ShareChartComponent';\n\nimport { CountryType, StatisticType } from '../../../utils/types';\nimport { isMobileOrTablet, formatNumber, displayUnit } from '../../../utils';\n\nconst WITH_SCALE_SETTINGS = false;\n\nfunction StatisticExplorer(props) {\n  const {\n    data,\n    countries,\n    statistics,\n    currentStatistic,\n    statisticSources,\n    currentYear,\n    perCapita,\n    onRowClick,\n    setStatistic,\n    setYear,\n    setPerCapita,\n    isLoaded,\n    mapRef,\n    scale,\n    setScale,\n  } = props;\n\n  const countryByCode = indexBy(c => c.alpha2Code, countries);\n  const formatedData = data\n    .filter(s => s.value !== null && countryByCode[s.countryCode])\n    .map(s => ({\n      countryCode: s.countryCode,\n      country:\n        s.countryCode === 'WORLD'\n          ? 'World'\n          : countryByCode[s.countryCode].commonName,\n      value: s.value,\n    }));\n\n  const statisticByCategory = groupBy(s => s.category, statistics);\n\n  if (currentStatistic.isIntensive && perCapita) {\n    setPerCapita(false);\n  }\n\n  return (\n    <div className=\"StatisticExplorer\">\n      <Select\n        style={{ width: '100%' }}\n        placeholder=\"Statistics\"\n        optionFilterProp=\"title\"\n        value={currentStatistic.code}\n        showSearch={!isMobileOrTablet()}\n        onChange={value => setStatistic(value)}\n      >\n        {Object.keys(statisticByCategory).map(category => {\n          const stats = statisticByCategory[category];\n          return (\n            <Select.OptGroup key={category} label={category}>\n              {sortBy(s => s.name, stats).map(statistic => (\n                <Select.Option key={statistic.code} title={statistic.name}>\n                  {`${statistic.name}`}\n                </Select.Option>\n              ))}\n            </Select.OptGroup>\n          );\n        })}\n      </Select>\n      <Slider\n        className=\"hideOnMobile\"\n        defaultValue={currentYear}\n        min={currentStatistic.startingYear}\n        max={currentStatistic.endingYear}\n        onAfterChange={year => setYear(year)}\n        onChange={debounce(setYear, 300)}\n        included={false}\n        marks={{\n          [currentStatistic.startingYear]: {\n            style: {},\n            label: `${currentStatistic.startingYear}`,\n          },\n          [currentStatistic.endingYear]: {\n            style: {\n              width: 'auto',\n              margin: 'auto',\n              left: '',\n              right: '-15px',\n            }, // hack\n            label: `${currentStatistic.endingYear}`,\n          },\n        }}\n      />\n      <div className=\"StatisticExplorer__options\">\n        <Radio.Group\n          style={{ marginBottom: '10px' }}\n          buttonStyle=\"solid\"\n          size=\"small\"\n          value={perCapita}\n          onChange={e => setPerCapita(e.target.value)}\n        >\n          <Radio.Button value={false}>Absolute</Radio.Button>\n          <Radio.Button\n            value\n            disabled={\n              currentStatistic.code === 'POPULATION' ||\n              currentStatistic.isIntensive\n            }\n          >\n            Per capita\n          </Radio.Button>\n        </Radio.Group>\n        <div className=\"StatisticExplorer__options__right\">\n          <ShareChartComponent\n            filename={currentStatistic.name.replace(/ /g, '_')}\n            chartRef={mapRef}\n            statistics={{\n              countryCode: { code: 'COUNTRY_CODE' },\n              value: currentStatistic,\n            }}\n            data={data}\n          />\n          <StatisticDetails\n            statisticSources={statisticSources}\n            description={currentStatistic.description}\n          />\n          {WITH_SCALE_SETTINGS && (\n            <Popover\n              title=\"Settings\"\n              arrowPointAtCenter\n              content={\n                // eslint-disable-next-line react/jsx-wrap-multilines\n                <div>\n                  {'Scale '}\n                  <Radio.Group\n                    buttonStyle=\"solid\"\n                    size=\"small\"\n                    value={scale}\n                    onChange={e => setScale(e.target.value)}\n                  >\n                    <Radio.Button value=\"log\">Log</Radio.Button>\n                    <Radio.Button value=\"linear\">Linear</Radio.Button>\n                  </Radio.Group>\n                </div>\n              }\n              placement=\"bottomRight\"\n            >\n              <Button size=\"small\">\n                <Icon type=\"setting\" theme=\"filled\" />\n              </Button>\n            </Popover>\n          )}\n        </div>\n      </div>\n      <Table\n        className=\"hideOnMobile\"\n        rowKey=\"countryCode\"\n        size=\"small\"\n        pagination={false}\n        dataSource={formatedData}\n        loading={!isLoaded}\n        scroll={{ y: 380 }}\n        columns={[\n          {\n            title: 'Country',\n            dataIndex: 'country',\n            sorter: (a, b) => a.country.localeCompare(b.country),\n            width: 'auto',\n            // TODO\n            render: text =>\n              text === 'World' ? (\n                <strong>World</strong>\n              ) : (\n              <a href=\"javascript:;\">{text}</a>), // eslint-disable-line\n          },\n          {\n            title: displayUnit(currentStatistic.unit, perCapita),\n            dataIndex: 'value',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.value - b.value,\n            render: formatNumber,\n            align: 'right',\n          },\n        ]}\n        onRow={record => ({\n          onClick: () => onRowClick(record),\n        })}\n      />\n    </div>\n  );\n}\n\nStatisticExplorer.propTypes = {\n  countries: PropTypes.arrayOf(CountryType).isRequired,\n  statistics: PropTypes.arrayOf(StatisticType).isRequired,\n  currentStatistic: StatisticType.isRequired,\n  statisticSources: PropTypes.arrayOf(StatisticType).isRequired,\n  currentYear: PropTypes.number.isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      countryCode: PropTypes.string.isRequired,\n      value: PropTypes.number,\n    }),\n  ).isRequired,\n\n  onRowClick: PropTypes.func.isRequired,\n  setStatistic: PropTypes.func.isRequired,\n  setYear: PropTypes.func.isRequired,\n  perCapita: PropTypes.bool.isRequired,\n  setPerCapita: PropTypes.func.isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  mapRef: PropTypes.object.isRequired,\n  scale: PropTypes.string,\n  setScale: PropTypes.func.isRequired,\n};\n\nStatisticExplorer.defaultProps = {\n  scale: null,\n};\n\nexport default StatisticExplorer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col } from 'antd';\n\nimport WorldMap from './components/WorldMap';\nimport StatisticExplorer from './components/StatisticExplorer';\n\nimport {\n  countriesSelector,\n  countriesInBounds,\n  dependentCountriesSelector,\n} from '../../store/countries';\nimport {\n  allStatisticsSelector,\n  statisticSelector,\n  compiledStatisticForCountriesAndYear,\n  loadStatisticOfCountries,\n  statisticOfAllCountriesLoadedSelector,\n  statisticSourcesSelector,\n} from '../../store/statistics';\n\nfunction f(statisticCode, perCapita) {\n  // TODO\n  return perCapita ? [statisticCode, 'POPULATION'] : [statisticCode];\n}\n\nconst ConnectedWorldMap = connect(\n  (state, { statisticCode, currentYear, perCapita, boundsFilter }) => ({\n    selectedCountries: countriesInBounds(boundsFilter, state),\n    countries: countriesSelector(state),\n    dependentCountries: dependentCountriesSelector(state),\n    currentStatistic: statisticSelector(statisticCode, state),\n    data: compiledStatisticForCountriesAndYear(\n      {\n        statisticCode,\n        year: currentYear,\n        perCapita,\n      },\n      state,\n    ),\n  }),\n)(WorldMap);\n\nconst ConnectedStatisticExplorer = connect(\n  (state, { statisticCode, currentYear, perCapita, boundsFilter }) => ({\n    countries: countriesInBounds(boundsFilter, state),\n    statistics: allStatisticsSelector(state),\n    currentStatistic: statisticSelector(statisticCode, state),\n    statisticSources: statisticSourcesSelector(\n      f(statisticCode, perCapita),\n      state,\n    ),\n    isLoaded:\n      statisticOfAllCountriesLoadedSelector(statisticCode, state) &&\n      (!perCapita ||\n        statisticOfAllCountriesLoadedSelector('POPULATION', state)),\n    data: compiledStatisticForCountriesAndYear(\n      {\n        statisticCode,\n        year: currentYear,\n        perCapita,\n      },\n      state,\n    ),\n  }),\n)(StatisticExplorer);\n\nconst MIN_ZOOM = 2;\n\nclass HomeView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      statisticCode: 'PRIMARY_ENERGY_CONSUMPTION_MTOE',\n      currentYear: 2010,\n      perCapita: false,\n      scale: null,\n      boundsFilter: null,\n    };\n    this.mapRef = React.createRef();\n    this.onMapChange = e =>\n      this.setFilterBounds(e.target.getBounds(), e.target.getZoom());\n  }\n\n  componentDidMount() {\n    const { statisticCode } = this.state;\n    const { loadStatistic } = this.props;\n\n    loadStatistic(statisticCode);\n  }\n\n  setStatistic(statisticCode) {\n    const { loadStatistic } = this.props;\n    loadStatistic(statisticCode);\n    const newState = {\n      statisticCode,\n      ...(statisticCode === 'POPULATION' ? { perCapita: false } : {}),\n    };\n    this.setState(newState);\n  }\n\n  setYear(year) {\n    this.setState({ currentYear: year });\n  }\n\n  setFilterBounds(bounds, zoom) {\n    this.setState({ boundsFilter: zoom === MIN_ZOOM ? null : bounds });\n  }\n\n  setPerCapita(value) {\n    const { loadStatistic } = this.props;\n    if (value) {\n      loadStatistic('POPULATION');\n    }\n    this.setState({ perCapita: value });\n  }\n\n  setScale(scale) {\n    this.setState({ scale });\n  }\n\n  render() {\n    const {\n      history: { push },\n    } = this.props;\n    const {\n      currentYear,\n      statisticCode,\n      perCapita,\n      scale,\n      boundsFilter,\n    } = this.state;\n\n    return (\n      <div className=\"HomeView\">\n        <Row>\n          <h1>Welcome to the World Energy Data Explorer</h1>\n        </Row>\n        <Row gutter={{ md: 20 }}>\n          <Col md={16}>\n            <div ref={this.mapRef}>\n              <ConnectedWorldMap\n                statisticCode={statisticCode}\n                currentYear={currentYear}\n                perCapita={perCapita}\n                scale={scale}\n                minZoom={MIN_ZOOM}\n                onMapChange={this.onMapChange}\n                boundsFilter={boundsFilter}\n              />\n            </div>\n          </Col>\n          <Col md={8}>\n            <ConnectedStatisticExplorer\n              statisticCode={statisticCode}\n              currentYear={currentYear}\n              perCapita={perCapita}\n              onRowClick={record => push(`country/${record.countryCode}`)}\n              setYear={year => this.setYear(year)}\n              setStatistic={value => this.setStatistic(value)}\n              setPerCapita={value => this.setPerCapita(value)}\n              mapRef={this.mapRef}\n              scale={scale}\n              setScale={value => this.setScale(value)}\n              boundsFilter={boundsFilter}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nHomeView.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  loadStatistic: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  { loadStatistic: loadStatisticOfCountries },\n)(HomeView);\n","import { countrySelector, countriesSelector } from './countries';\nimport { areaSelector, areasOfCountrySelector } from './areas';\n\nexport function countryWithAreasSelector(countryCode, state) {\n  const country = countrySelector(countryCode, state);\n  const areas = areasOfCountrySelector(countryCode, state);\n\n  return {\n    ...country,\n    areas,\n  };\n}\n\nexport function areaWithCountriesSelector(areaCode, state) {\n  const area = areaSelector(areaCode, state);\n  const countries = area.countryCodes\n    ? area.countryCodes\n        .map(countryCode => countrySelector(countryCode, state))\n        .filter(c => !!c)\n    : countriesSelector(state);\n  return {\n    ...area,\n    countries,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Switch } from 'antd';\n\nfunction ChartSettings(props) {\n  const {\n    perCapitaSwitch,\n    stackedSwitch,\n    perCapita,\n    stacked,\n    setPerCapita,\n    setStacked,\n  } = props;\n\n  return (\n    <div className=\"ChartSettings\">\n      {perCapitaSwitch && (\n        <div>\n          {'Per capita '}\n          <Switch size=\"small\" checked={perCapita} onChange={setPerCapita} />\n        </div>\n      )}\n      {stackedSwitch && (\n        <div>\n          {'Stacked '}\n          <Switch size=\"small\" checked={stacked} onChange={setStacked} />\n        </div>\n      )}\n    </div>\n  );\n}\nChartSettings.propTypes = {\n  perCapitaSwitch: PropTypes.bool.isRequired,\n  stackedSwitch: PropTypes.bool.isRequired,\n  perCapita: PropTypes.bool.isRequired,\n  stacked: PropTypes.bool.isRequired,\n  setPerCapita: PropTypes.func.isRequired,\n  setStacked: PropTypes.func.isRequired,\n};\n\nexport default ChartSettings;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { omit, equals } from 'ramda';\n\nclass Loader extends Component {\n  componentWillMount() {\n    const { load, ...otherProps } = this.props;\n\n    load(otherProps);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevOtherProps = omit(['load'], prevProps);\n    const { load, ...otherProps } = this.props;\n\n    if (!equals(prevOtherProps, otherProps)) {\n      load(otherProps);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLoader.propTypes = {\n  load: PropTypes.func.isRequired,\n};\n\nfunction buildLoader(loadFunction) {\n  return connect(\n    null,\n    { load: loadFunction },\n  )(Loader);\n}\n\nexport default buildLoader;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { map, values, uniq } from 'ramda';\n\nimport { Spin } from 'antd';\n\nimport buildLoader from './buildLoader';\nimport {\n  loadCountryStatistics,\n  countryStatisticsLoadedSelector,\n  statisticSelector,\n  compiledCountryStatisticsSelector,\n  statisticSourcesSelector,\n} from '../store/statistics';\nimport { parseMapOfStatistics, addPopCountryStatistics } from '../utils';\nimport { countrySelector } from '../store/countries';\n\nconst StatisticsLoader = buildLoader(({ countryStatistics }) =>\n  loadCountryStatistics(countryStatistics),\n);\n\nfunction defaultSelector(state, props) {\n  return {\n    value: props.statisticCode,\n  };\n}\n\nfunction mapStateToProps(state, props) {\n  const {\n    perCapita,\n    worldReference,\n    statisticCode,\n    mapOfCountryStatistics: mapOfCountryStatisticsInput,\n    countryCode,\n  } = props;\n  const isIntensive =\n    statisticCode && statisticSelector(statisticCode, state).isIntensive;\n  const mapOfCountryStatistics =\n    (perCapita || isIntensive) && worldReference\n      ? {\n          ...mapOfCountryStatisticsInput,\n          world: {\n            countryCode: 'WORLD',\n            statisticCode:\n              typeof worldReference === 'boolean'\n                ? statisticCode\n                : worldReference,\n          },\n        }\n      : mapOfCountryStatisticsInput;\n\n  const parsedMapOfCountryStatistics = parseMapOfStatistics(\n    mapOfCountryStatistics,\n    countryCode,\n  );\n  const mapOfCountryStatisticsToLoad = addPopCountryStatistics(\n    parsedMapOfCountryStatistics,\n    perCapita,\n  );\n  const countryStatisticsToLoad = values(mapOfCountryStatisticsToLoad);\n  const statisticCodes = uniq(\n    countryStatisticsToLoad.map(c => c.statisticCode),\n  );\n  const isLoaded = countryStatisticsLoadedSelector(\n    countryStatisticsToLoad,\n    state,\n  );\n  const data = isLoaded\n    ? compiledCountryStatisticsSelector(\n        {\n          mapOfCountryStatistics,\n          countryCode: props.countryCode,\n          perCapita: props.perCapita,\n        },\n        state,\n      )\n    : [];\n\n  return {\n    data,\n    statistics: map(\n      ({ statisticCode: code }) => statisticSelector(code, state),\n      parsedMapOfCountryStatistics,\n    ),\n    statisticSources: statisticSourcesSelector(statisticCodes, state),\n    isLoaded,\n    countryStatisticsToLoad,\n    country: countrySelector(countryCode, state),\n  };\n}\n\nfunction withCountryStatistics(\n  mapOfCountryStatisticsSelectorInput = defaultSelector,\n) {\n  const mapOfCountryStatisticsSelector =\n    typeof mapOfCountryStatisticsSelectorInput === 'object'\n      ? () => mapOfCountryStatisticsSelectorInput\n      : mapOfCountryStatisticsSelectorInput;\n\n  return function withCountryStatisticWrapper(WrappedComponent) {\n    return connect((state, props) =>\n      mapStateToProps(state, {\n        mapOfCountryStatistics: mapOfCountryStatisticsSelector(state, props),\n        ...props,\n      }),\n    )(props => (\n      <Spin spinning={!props.isLoaded}>\n        <StatisticsLoader countryStatistics={props.countryStatisticsToLoad} />\n        <WrappedComponent {...props} />\n      </Spin>\n    ));\n  };\n}\n\nexport default withCountryStatistics;\n","import React, { Component } from 'react';\nimport { values } from 'ramda';\nimport { withStateHandlers, compose } from 'recompose';\n\nimport { Icon, Popover, Button } from 'antd';\n\nimport { displayUnit } from '../utils';\nimport StatisticDetails from '../components/StatisticDetails';\n\nimport ChartSettings from './components/ChartSettings';\nimport ShareChartComponent from '../components/ShareChartComponent';\nimport withCountryStatistics from './withCountryStatistics';\n\nconst defaultHeight = 200;\n\nfunction buildChart(options = {}) {\n  const {\n    mapOfCountryStatisticsSelector,\n    perCapitaSwitch = false,\n    stackedSwitch = false,\n  } = options;\n  const hocs = [];\n  const hasSettings = perCapitaSwitch || stackedSwitch;\n\n  if (hasSettings) {\n    hocs.push(\n      withStateHandlers(\n        ({ defaultPerCapita = false, defaultStacked = false }) => ({\n          perCapita: defaultPerCapita,\n          stacked: defaultStacked,\n        }),\n        {\n          setPerCapita: () => perCapita => ({ perCapita }),\n          setStacked: () => stacked => ({ stacked }),\n        },\n      ),\n    );\n  }\n  hocs.push(withCountryStatistics(mapOfCountryStatisticsSelector));\n\n  return function buildChartWrapper(WrappedChart) {\n    return compose(...hocs)(\n      class ChartWrapper extends Component {\n        constructor() {\n          super();\n          this.chartRef = React.createRef();\n          this.buttonRef = React.createRef();\n        }\n\n        render() {\n          const {\n            title,\n            description,\n            statistics,\n            statisticSources,\n            height,\n            perCapita = false,\n            stacked = false,\n            setPerCapita,\n            setStacked,\n            data,\n          } = this.props;\n          const statisticList = values(statistics);\n          const statistic = statisticList[0];\n          const finalHeight = options.height || height || defaultHeight;\n          const id = (title\n            ? title.replace(/ /g, '_')\n            : statistic.name.replace(/ /g, '_')\n          ).toLowerCase();\n\n          const descriptionStatistic = statisticList.find(\n            s => s.code === description,\n          );\n          const finalDescription =\n            statisticList.length < 2\n              ? description || statistic.description\n              : (descriptionStatistic && descriptionStatistic.description) ||\n                description;\n\n          return (\n            <div id={id} className=\"ChartWrapper\" ref={this.chartRef}>\n              <div className=\"ChartWrapper__header\">\n                <div className=\"ChartWrapper__header__left\">\n                  <span className=\"ChartWrapper__title\">\n                    {title || statistic.name}\n                  </span>\n                  <span className=\"ChartWrapper__title__unit\">\n                    {` (${displayUnit(statistic.unit, perCapita)})`}\n                  </span>\n                </div>\n                <div\n                  className=\"ChartWrapper__header__right\"\n                  data-html2canvas-ignore\n                >\n                  <ShareChartComponent\n                    id={id}\n                    chartRef={this.chartRef}\n                    statistics={{ year: { code: 'YEAR' }, ...statistics }}\n                    data={data}\n                  />\n                  <StatisticDetails\n                    statisticSources={statisticSources}\n                    description={finalDescription}\n                  />\n                  {hasSettings && (\n                    <div>\n                      <Popover\n                        title=\"Settings\"\n                        arrowPointAtCenter\n                        content={\n                          // eslint-disable-next-line react/jsx-wrap-multilines\n                          <ChartSettings\n                            perCapitaSwitch={perCapitaSwitch}\n                            stackedSwitch={stackedSwitch}\n                            stacked={stacked}\n                            perCapita={perCapita}\n                            setPerCapita={setPerCapita}\n                            setStacked={setStacked}\n                          />\n                        }\n                        placement=\"bottomRight\"\n                      >\n                        <Button size=\"small\">\n                          <Icon type=\"setting\" theme=\"filled\" />\n                        </Button>\n                      </Popover>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <WrappedChart\n                {...this.props}\n                height={finalHeight}\n                perCapita={perCapita}\n                stacked={stacked}\n              />\n              <div className=\"ChartWrapper__footer\" />\n            </div>\n          );\n        }\n      },\n    );\n  };\n}\n\nexport default buildChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatNumber } from '../../../utils';\n\nfunction CustomTooltip(props) {\n  const { active, separator, payload, withTotal } = props;\n\n  if (active && payload && payload.length > 0) {\n    const { label, displayFilter, totalFilter, units } = props;\n    const filteredPayload = payload.filter(displayFilter);\n\n    if (filteredPayload.length < 2) {\n      const { formatter = formatNumber, unit, color, value } = payload[0];\n      return (\n        <div className=\"CustomTooltip\" style={{ color }}>\n          {`${label} : ${formatter(value)} ${unit}`}\n        </div>\n      );\n    }\n    const total = payload\n      .filter(totalFilter)\n      .reduce((sum, p) => sum + p.value, 0);\n    const totalUnit = filteredPayload[0].unit;\n\n    return (\n      <div className=\"CustomTooltip\">\n        <div>{label}</div>\n        <div>\n          {filteredPayload.map((p, i) => {\n            const {\n              formatter = formatNumber,\n              unit,\n              color,\n              name,\n              dataKey,\n              value,\n            } = p;\n            return (\n              <div key={dataKey || name} style={{ color }}>\n                {`${name}${separator}${formatter(value)} ${unit || units[i]}`}\n              </div>\n            );\n          })}\n          {withTotal && (\n            <div key=\"__total__\">\n              <hr size={1} />\n              {`Total${separator}${formatNumber(total)} ${totalUnit}`}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n  return null;\n}\nCustomTooltip.propTypes = {\n  active: PropTypes.bool.isRequired,\n  separator: PropTypes.string.isRequired,\n  payload: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n      unit: PropTypes.string.isRequired,\n      color: PropTypes.string,\n      formatter: PropTypes.func,\n    }).isRequired,\n  ).isRequired,\n  label: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  withTotal: PropTypes.bool,\n  displayFilter: PropTypes.func,\n  totalFilter: PropTypes.func,\n  units: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n};\nCustomTooltip.defaultProps = {\n  label: '',\n  withTotal: false,\n  displayFilter: i => i,\n  totalFilter: i => i,\n  units: {},\n};\n\nexport default CustomTooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  LineChart,\n  ResponsiveContainer,\n  CartesianGrid,\n  Legend,\n} from 'recharts';\nimport CustomTooltip from './CustomTooltip';\n\nimport { StatisticType, CountryType } from '../../../utils/types';\nimport { tickFormatter, displayUnit } from '../../../utils';\n\nfunction BasicChart(props) {\n  const {\n    data,\n    statistics,\n    color,\n    perCapita,\n    height,\n    worldReference,\n    country,\n  } = props;\n  const statistic = statistics.value;\n  const unit = displayUnit(statistic.unit, perCapita);\n  const withComparison = worldReference && (perCapita || statistic.isIntensive);\n\n  return (\n    <div className=\"BasicChart\">\n      <ResponsiveContainer height={height}>\n        <LineChart data={data}>\n          <Line\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke={color}\n            strokeWidth={3}\n            dot={false}\n            name={country.commonName}\n            unit={` ${unit}`}\n          />\n          {withComparison && (\n            <Line\n              type=\"monotone\"\n              dataKey=\"world\"\n              stroke=\"red\"\n              strokeWidth={3}\n              dot={false}\n              name=\"World\"\n              unit={` ${unit}`}\n            />\n          )}\n          <CartesianGrid stroke=\"#ccc\" opacity={0.2} />\n          <XAxis dataKey=\"year\" interval={9} padding={{ left: 5, right: 5 }} />\n          <YAxis tickFormatter={tickFormatter} />\n          <Tooltip content={props2 => <CustomTooltip {...props2} />} />\n          {withComparison && <Legend iconType=\"circle\" />}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nBasicChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      year: PropTypes.number.isRequired,\n      value: PropTypes.number,\n    }),\n  ).isRequired,\n  statistics: PropTypes.shape({\n    value: StatisticType,\n  }).isRequired,\n  height: PropTypes.number.isRequired,\n  perCapita: PropTypes.bool.isRequired,\n  color: PropTypes.string,\n  worldReference: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  country: CountryType.isRequired,\n};\n\nBasicChart.defaultProps = {\n  color: '#2c82c9',\n  worldReference: false,\n};\n\nexport default BasicChart;\n","import buildChart from '../../../HOC/buildChart';\nimport BasicChart from '../components/BasicChart';\n\nexport default buildChart()(BasicChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Map, TileLayer, withLeaflet } from 'react-leaflet';\nimport L from 'leaflet';\n\nimport { coordsToLatLng } from '../utils';\n\nclass CustomGeoJSON extends Component {\n  componentDidMount() {\n    this.createGeoJSON();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n    if (prevProps.data !== data) {\n      this.geojson.remove();\n      this.createGeoJSON();\n    }\n  }\n\n  createGeoJSON() {\n    const {\n      leaflet: { map },\n      data,\n    } = this.props;\n\n    this.geojson = L.geoJSON(data, { coordsToLatLng }).addTo(map);\n    const bounds = this.geojson.getBounds();\n    map.flyToBounds(bounds);\n  }\n\n  render() {\n    return null;\n  }\n}\nCustomGeoJSON.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  leaflet: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.object.isRequired,\n};\nconst GeoJSON = withLeaflet(CustomGeoJSON);\n\nfunction GeoJSONMap(props) {\n  const { geojson, center } = props;\n\n  return (\n    <div className=\"GeoJSONMap\">\n      <Map\n        center={center}\n        zoom={2}\n        zoomDelta={0}\n        zoomSnap={0}\n        boxZoom={false}\n        doubleClickZoom={false}\n        scrollWheelZoom={false}\n        zoomControl={false}\n        dragging={false}\n        style={{ height: '300px', zIndex: 0 }}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {geojson && <GeoJSON data={geojson} />}\n      </Map>\n    </div>\n  );\n}\n\nGeoJSONMap.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  geojson: PropTypes.object.isRequired,\n  center: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default GeoJSONMap;\n","import { Component } from 'react';\nimport { equals } from 'ramda';\n\nclass ScrollToTop extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equals(this.props, prevProps)) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default ScrollToTop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Area,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { values } from 'ramda';\n\nimport { getNiceTickValues } from 'recharts-scale';\nimport { tickFormatter, displayUnit } from '../../../utils';\nimport { StatisticType } from '../../../utils/types';\nimport CustomTooltip from './CustomTooltip';\n\nfunction EnergyMixChart(props) {\n  const { data, stacked, perCapita, fuelConsumed, statistics } = props;\n  const { unit: coalUnit } = statistics.coal;\n  const unit = displayUnit(coalUnit, perCapita);\n  const LineArea = stacked ? Area : Line;\n  const defaultLineAreaProps = {\n    type: 'monotone',\n    dot: false,\n    activeDot: false,\n    unit,\n  };\n  const lineAreaProps = stacked\n    ? { stackId: '1', ...defaultLineAreaProps }\n    : { strokeWidth: 2, ...defaultLineAreaProps };\n\n  if (\n    values(statistics).some(statistic => statistic.unit.main !== coalUnit.main)\n  ) {\n    console.warn('EnergyMixChart : statistics have not same units');\n  }\n\n  const max = Math.max(\n    ...(stacked\n      ? data.map(d =>\n          Object.keys(fuelConsumed).reduce((sum, k) => sum + d[k], 0),\n        )\n      : data.map(d => Math.max(...Object.keys(fuelConsumed).map(k => d[k])))),\n    ...(perCapita ? data.map(d => d.world) : []),\n  );\n\n  const chartMax = max * 1.05;\n  const ticks = getNiceTickValues([0, chartMax], 5, true);\n\n  if (ticks[3] > chartMax) {\n    ticks.pop();\n  }\n  const domain = [0, ticks[ticks.length - 1]];\n\n  return (\n    <div className=\"EnergyMixChart\">\n      <ResponsiveContainer height={280} width=\"100%\">\n        <ComposedChart data={data}>\n          {fuelConsumed.coal && (\n            <LineArea\n              {...lineAreaProps}\n              dataKey=\"coal\"\n              name=\"Coal\"\n              stroke=\"black\"\n              fill=\"black\"\n            />\n          )}\n          {fuelConsumed.oil && (\n            <LineArea\n              {...lineAreaProps}\n              dataKey=\"oil\"\n              name=\"Oil\"\n              stroke=\"grey\"\n              fill=\"grey\"\n            />\n          )}\n          {fuelConsumed.gas && (\n            <LineArea\n              {...lineAreaProps}\n              dataKey=\"gas\"\n              name=\"Gas\"\n              stroke=\"orange\"\n              fill=\"orange\"\n            />\n          )}\n          {fuelConsumed.nuclear && (\n            <LineArea\n              {...lineAreaProps}\n              dataKey=\"nuclear\"\n              name=\"Nuclear\"\n              stroke=\"purple\"\n              fill=\"purple\"\n            />\n          )}\n          {fuelConsumed.hydro && (\n            <LineArea\n              {...lineAreaProps}\n              dataKey=\"hydro\"\n              name=\"Hydroelectricity\"\n              stroke=\"blue\"\n              fill=\"blue\"\n            />\n          )}\n          {fuelConsumed.biofuelsWaste && (\n            <LineArea\n              {...lineAreaProps}\n              dataKey=\"biofuelsWaste\"\n              name=\"Biofuels & Waste\"\n              stroke=\"saddlebrown\"\n              fill=\"saddlebrown\"\n            />\n          )}\n          {fuelConsumed.solarWindTideGeoth && (\n            <LineArea\n              {...lineAreaProps}\n              dataKey=\"solarWindTideGeoth\"\n              name=\"Geothermy, Wind, Solar & Tide\"\n              stroke=\"green\"\n              fill=\"green\"\n            />\n          )}\n          {perCapita && (\n            <Line\n              type=\"monotone\"\n              dataKey=\"world\"\n              strokeWidth={2}\n              dot={false}\n              activeDot={false}\n              name=\"World\"\n              stroke=\"red\"\n              unit={unit}\n            />\n          )}\n\n          <CartesianGrid stroke=\"#ccc\" opacity={0.2} />\n          <XAxis dataKey=\"year\" interval={4} />\n          <YAxis tickFormatter={tickFormatter} ticks={ticks} domain={domain} />\n          <Tooltip\n            content={props2 => (\n              <CustomTooltip\n                {...props2}\n                withTotal\n                totalFilter={p => p.name !== 'World'}\n              />\n            )}\n          />\n          <Legend iconType=\"circle\" />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nEnergyMixChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      year: PropTypes.number,\n      coal: PropTypes.number,\n      oil: PropTypes.number,\n      gas: PropTypes.number,\n      hydro: PropTypes.number,\n      nuclear: PropTypes.number,\n      biofuelsWaste: PropTypes.number,\n      solarWindTideGeoth: PropTypes.number,\n      world: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n  fuelConsumed: PropTypes.shape({\n    coal: PropTypes.bool,\n    oil: PropTypes.bool,\n    gas: PropTypes.bool,\n    hydro: PropTypes.bool,\n    nuclear: PropTypes.bool,\n    biofuelsWaste: PropTypes.bool,\n    solarWindTideGeoth: PropTypes.bool,\n  }).isRequired,\n  statistics: PropTypes.shape({\n    coal: StatisticType.isRequired,\n    oil: StatisticType.isRequired,\n    gas: StatisticType.isRequired,\n    hydro: StatisticType.isRequired,\n    nuclear: StatisticType.isRequired,\n    biofuelsWaste: StatisticType.isRequired,\n    solarWindTideGeoth: StatisticType.isRequired,\n  }).isRequired,\n  setStacked: PropTypes.func.isRequired,\n  setPerCapita: PropTypes.func.isRequired,\n  stacked: PropTypes.bool.isRequired,\n  perCapita: PropTypes.bool.isRequired,\n};\n\nexport default EnergyMixChart;\n","import { connect } from 'react-redux';\n\nimport buildChart from '../../../HOC/buildChart';\nimport EnergyMixChart from '../components/EnergyMixChart';\n\nimport { fuelConsumedCountrySelector } from '../../../store/countries';\n\nconst EnergyMixChartBuilded = buildChart({\n  perCapitaSwitch: true,\n  stackedSwitch: true,\n})(EnergyMixChart);\n\nconst EnergyMixChartContainer = connect((state, { countryCode }) => ({\n  fuelConsumed: fuelConsumedCountrySelector(countryCode, state),\n}))(EnergyMixChartBuilded);\n\nexport default EnergyMixChartContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport EnergyMixChartContainer from '../containers/EnergyMixChartContainer';\n\nconst primaryMap = {\n  coal: 'COAL_CONSUMPTION_MTOE',\n  gas: 'GAS_CONSUMPTION_MTOE',\n  oil: 'OIL_CONSUMPTION_MTOE',\n  hydro: 'HYDRO_PRODUCTION_MTOE',\n  nuclear: 'NUCLEAR_PRODUCTION_MTOE',\n  biofuelsWaste: 'BIOFUELS_WASTE_CONSUMPTION_MTOE',\n  solarWindTideGeoth: 'GEOTH_SOLAR_WIND_TIDE_PRODUCTION_MTOE',\n};\nconst primaryReference = 'PRIMARY_ENERGY_CONSUMPTION_MTOE';\n\nconst electrictyMap = {\n  coal: 'COAL_ELECTRICITY_GENERATION_TWH',\n  gas: 'GAS_ELECTRICITY_GENERATION_TWH',\n  oil: 'OIL_ELECTRICITY_GENERATION_TWH',\n  hydro: 'HYDRO_GENERATION_TWH',\n  nuclear: 'NUCLEAR_GENERATION_TWH',\n  biofuelsWaste: 'BIOFUELS_WASTE_ELECTRICITY_GENERATION_TWH',\n  solarWindTideGeoth: 'GEOTH_SOLAR_WIND_TIDE_ELECTRICITY_GENERATION_TWH',\n};\nconst electricityReference = 'ELECTRICITY_GENERATION_TWH';\n\nfunction SummaryTab(props) {\n  const { countryCode } = props;\n  return (\n    <div className=\"SummaryTab\">\n      <div>\n        <EnergyMixChartContainer\n          title=\"Primary energy consumption\"\n          description=\"PRIMARY_ENERGY_CONSUMPTION_MTOE\"\n          countryCode={countryCode}\n          mapOfCountryStatistics={primaryMap}\n          worldReference={primaryReference}\n          defaultPerCapita\n          defaultStacked\n        />\n      </div>\n      <div id=\"test\" style={{ marginTop: '20px' }}>\n        <EnergyMixChartContainer\n          title=\"Electricity generation by fuels\"\n          description=\"ELECTRICITY_GENERATION_TWH\"\n          countryCode={countryCode}\n          mapOfCountryStatistics={electrictyMap}\n          worldReference={electricityReference}\n          defaultPerCapita\n          defaultStacked\n        />\n      </div>\n    </div>\n  );\n}\n\nSummaryTab.propTypes = {\n  countryCode: PropTypes.string.isRequired,\n};\n\nexport default SummaryTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\nimport { StatisticType } from '../../../utils/types';\nimport { tickFormatter } from '../../../utils';\nimport CustomTooltip from './CustomTooltip';\n\nfunction ProdConsoChart(props) {\n  const { fuel, statistics, data, height } = props;\n\n  const consoStatistic = statistics.conso;\n  const prodStatistic = statistics.prod;\n  if (consoStatistic.unit.main !== prodStatistic.unit.main) {\n    // eslint-disable-next-line no-console\n    console.warn('Production and consommation have not the same unit', [\n      prodStatistic.code,\n      consoStatistic.code,\n    ]);\n  }\n  const unit = consoStatistic.unit.main;\n  const dataWithImportAndExport = data.map(l => {\n    const diff = Number((l.prod - l.conso).toFixed(2));\n    return {\n      year: l.year,\n      prod: l.prod,\n      conso: l.conso,\n      export: diff > 0 ? diff : null,\n      import: diff < 0 ? -diff : null,\n      base: Math.min(l.prod, l.conso),\n    };\n  });\n\n  return (\n    <div className=\"ProdConsoChart\">\n      <ResponsiveContainer height={height}>\n        <ComposedChart data={dataWithImportAndExport}>\n          <Area\n            type=\"monotone\"\n            dot={false}\n            dataKey=\"base\"\n            stroke=\"none\"\n            stackId=\"1\"\n            activeDot={false}\n            fill=\"none\"\n            unit={unit}\n          />\n          <Area\n            type=\"monotone\"\n            dot={false}\n            unit={unit}\n            name={`${fuel} export`}\n            dataKey=\"export\"\n            activeDot={false}\n            stroke=\"green\"\n            strokeOpacity={0}\n            fillOpacity={0.8}\n            fill=\"green\"\n            stackId=\"1\"\n          />\n          <Area\n            type=\"monotone\"\n            dot={false}\n            unit={unit}\n            name={`${fuel} import`}\n            dataKey=\"import\"\n            activeDot={false}\n            stroke=\"red\"\n            strokeOpacity={0}\n            fillOpacity={0.8}\n            fill=\"red\"\n            stackId=\"1\"\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"conso\"\n            dot={false}\n            unit={unit}\n            stroke=\"#96281b\"\n            strokeWidth={3}\n            name={consoStatistic.name}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"prod\"\n            dot={false}\n            unit={unit}\n            stroke=\"black\"\n            strokeWidth={3}\n            strokeOpacity={0.7}\n            name={prodStatistic.name}\n          />\n\n          <CartesianGrid stroke=\"#ccc\" opacity={0.2} />\n          <XAxis dataKey=\"year\" interval={9} />\n          <YAxis />\n          <Tooltip\n            tickFormatter={tickFormatter}\n            content={props2 => (\n              <CustomTooltip\n                {...props2}\n                displayFilter={p => p.name !== 'base'}\n              />\n            )}\n          />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nProdConsoChart.propTypes = {\n  statistics: PropTypes.shape({\n    prod: StatisticType.isRequired,\n    conso: StatisticType.isRequired,\n  }).isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      year: PropTypes.number.isRequired,\n      prod: PropTypes.number,\n      conso: PropTypes.number,\n    }),\n  ).isRequired,\n  fuel: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nexport default ProdConsoChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Scatter,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ScatterChart,\n  ResponsiveContainer,\n  CartesianGrid,\n} from 'recharts';\nimport CustomTooltip from './CustomTooltip';\n\nimport { StatisticType } from '../../../utils/types';\nimport { tickFormatter } from '../../../utils';\n\nfunction GDPByEnergyChart(props) {\n  const { data, color, statistics } = props;\n  // const statistic = statistics.value;\n  // const unit = displayUnit(statistic.unit, perCapita);\n\n  return (\n    <div className=\"GDPByEnergyChart\">\n      <ResponsiveContainer height={300}>\n        <ScatterChart data={data} margin={{ bottom: 50 }}>\n          <Scatter\n            fill={color}\n            shape={props2 => (\n              <circle cx={props2.cx} cy={props2.cy} r={3} fill={color} />\n            )}\n            line\n          />\n          <CartesianGrid stroke=\"#ccc\" opacity={0.2} />\n          <XAxis\n            dataKey=\"energy\"\n            name={statistics.energy.name}\n            type=\"number\"\n            domain={[\n              dataMin => Math.floor(0.95 * dataMin),\n              dataMax => Math.ceil(1.05 * dataMax),\n            ]}\n            tickFormatter={tickFormatter}\n            label={{\n              value: `${statistics.energy.name} (${\n                statistics.energy.unit.main\n              })`,\n              position: 'bottom',\n              style: { fill: '#666' },\n            }}\n            padding={{ left: 5, right: 5 }}\n          />\n          <YAxis\n            dataKey=\"gdp\"\n            name={statistics.gdp.name}\n            tickFormatter={tickFormatter}\n            padding={{ top: 5 }}\n          />\n          <Tooltip\n            content={props2 => (\n              <CustomTooltip\n                {...props2}\n                label={\n                  props2.payload &&\n                  props2.payload[0] &&\n                  props2.payload[0].payload.year\n                }\n                units={{\n                  '0': statistics.energy.unit.main,\n                  '1': statistics.gdp.unit.main,\n                }}\n              />\n            )}\n          />\n        </ScatterChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nGDPByEnergyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      year: PropTypes.number.isRequired,\n      gdp: PropTypes.number,\n      energy: PropTypes.number,\n    }),\n  ).isRequired,\n  statistics: PropTypes.shape({\n    gdp: StatisticType,\n    energy: StatisticType,\n  }).isRequired,\n  height: PropTypes.number.isRequired,\n  color: PropTypes.string,\n};\n\nGDPByEnergyChart.defaultProps = {\n  color: '#2c82c9',\n};\n\nexport default GDPByEnergyChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col } from 'antd';\n\nimport buildChart from '../../../HOC/buildChart';\nimport ProdConsoChart from './ProdConsoChart';\nimport GDPByEnergyChart from './GDPByEnergyChart';\nimport BasicChartContainer from '../containers/BasicChartContainer';\n\nconst ProdConsoChartContainer = buildChart({\n  mapOfCountryStatisticsSelector: (state, props) => ({\n    prod: props.prodStatisticCode,\n    conso: props.consoStatisticCode,\n  }),\n})(ProdConsoChart);\n\nconst GDPByEnergyChartContainer = buildChart({\n  mapOfCountryStatisticsSelector: {\n    gdp: 'GDP_2010_USD',\n    energy: 'PRIMARY_ENERGY_CONSUMPTION_MTOE',\n  },\n})(GDPByEnergyChart);\n\nfunction IndependencyTab(props) {\n  const { countryCode, fuelProducedOrConsumed } = props;\n  return (\n    <div className=\"IndependencyTab\">\n      <Row>\n        <Col md={8} sm={24}>\n          <BasicChartContainer\n            statisticCode=\"ENERGY_SELF_SUFFICIENCY\"\n            countryCode={countryCode}\n            color=\"#f15a22\"\n          />\n        </Col>\n      </Row>\n      <Row gutter={20}>\n        <h3>Imports/Exports</h3>\n        {fuelProducedOrConsumed.coal && (\n          <Col md={8} sm={24}>\n            <ProdConsoChartContainer\n              countryCode={countryCode}\n              prodStatisticCode=\"COAL_PRODUCTION_MTOE\"\n              consoStatisticCode=\"COAL_CONSUMPTION_MTOE\"\n              fuel=\"Coal\"\n              title=\"Coal Trade\"\n            />\n          </Col>\n        )}\n        {fuelProducedOrConsumed.oil && (\n          <Col md={8} sm={24}>\n            <ProdConsoChartContainer\n              countryCode={countryCode}\n              prodStatisticCode=\"OIL_PRODUCTION_MTOE\"\n              consoStatisticCode=\"OIL_CONSUMPTION_MTOE\"\n              fuel=\"Oil\"\n              title=\"Oil Trade\"\n            />\n          </Col>\n        )}\n        {fuelProducedOrConsumed.gas && (\n          <Col md={8} sm={24}>\n            <ProdConsoChartContainer\n              countryCode={countryCode}\n              prodStatisticCode=\"GAS_PRODUCTION_MTOE\"\n              consoStatisticCode=\"GAS_CONSUMPTION_MTOE\"\n              fuel=\"Gas\"\n              title=\"Gas Trade\"\n            />\n          </Col>\n        )}\n      </Row>\n      <Row>\n        <h3>Energy/GDP coupling</h3>\n        <Col md={16} sm={24}>\n          <GDPByEnergyChartContainer\n            countryCode={countryCode}\n            title=\"GDP according to primary energy\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nIndependencyTab.propTypes = {\n  countryCode: PropTypes.string.isRequired,\n  fuelProducedOrConsumed: PropTypes.shape({\n    coal: PropTypes.bool,\n    oil: PropTypes.bool,\n    gas: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default IndependencyTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col } from 'antd';\n\nimport BasicChartContainer from '../containers/BasicChartContainer';\n\nfunction ClimateTab(props) {\n  const { countryCode } = props;\n  return (\n    <div className=\"ClimateTab\">\n      <Row gutter={20}>\n        <Col md={8} sm={24}>\n          <BasicChartContainer\n            statisticCode=\"FOSSIL_CO2_EMISSIONS_MT\"\n            perCapita\n            countryCode={countryCode}\n            worldReference\n          />\n        </Col>\n        <Col md={8} sm={24}>\n          <BasicChartContainer\n            statisticCode=\"PRIMARY_ENERGY_CONSUMPTION_MTOE\"\n            perCapita\n            countryCode={countryCode}\n            worldReference\n          />\n        </Col>\n        <Col md={8} sm={24}>\n          <BasicChartContainer\n            statisticCode=\"CO2_INTENSITY_OF_ENERGY\"\n            countryCode={countryCode}\n            worldReference\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nClimateTab.propTypes = {\n  countryCode: PropTypes.string.isRequired,\n};\n\nexport default ClimateTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { Row, Col, Card } from 'antd';\n\nimport { countryWithAreasSelector } from '../../store/otherSelectors';\nimport { fuelProducedOrConsumedCountrySelector } from '../../store/countries';\n\nimport { CountryType } from '../../utils/types';\nimport { isMobileOrTablet } from '../../utils';\n\nimport BasicChartContainer from './containers/BasicChartContainer';\n\nimport GeoJSONMap from '../../components/GeoJSONMap';\nimport ScrollToTop from '../../components/ScrollToTop';\nimport SummaryTab from './components/SummaryTab';\nimport IndependencyTab from './components/IndependencyTab';\nimport ClimateTab from './components/ClimateTab';\n\nconst tabList = [\n  { key: 'summary', tab: 'Summary' },\n  { key: 'independency', tab: 'Energy (in)dependency' },\n  { key: 'climate', tab: 'Climate change' },\n];\n\nconst IndependencyTabContainer = connect((state, props) => ({\n  fuelProducedOrConsumed: fuelProducedOrConsumedCountrySelector(\n    props.countryCode,\n    state,\n  ),\n}))(IndependencyTab);\n\nconst tabContent = {\n  summary: countryCode => <SummaryTab countryCode={countryCode} />,\n  independency: countryCode => (\n    <IndependencyTabContainer countryCode={countryCode} />\n  ),\n  climate: countryCode => <ClimateTab countryCode={countryCode} />,\n};\n\nfunction CountryView(props) {\n  const { country, goTo, currentTab } = props;\n\n  if (!country || country.disabled) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const countryCode = country.alpha2Code;\n  const flag = isMobileOrTablet() ? country.flagIcon : '';\n  return (\n    <div className=\"CountryView\">\n      <ScrollToTop countryCode={countryCode} />\n      <Row gutter={16}>\n        <Col xs={24} sm={24} md={18}>\n          <Card title={<h2>{`${flag} ${country.commonName}`}</h2>}>\n            <div>{`Capital: ${country.capital}`}</div>\n            <div>{`Area: ${country.area.toLocaleString()} km²`}</div>\n            <div>\n              {`Member of: `}\n              {country.areas.map((area, i) => (\n                <Link key={area.code} to={`/area/${area.code}`}>\n                  {`${i > 0 ? ', ' : ''}${area.name}`}\n                </Link>\n              ))}\n            </div>\n            <Row style={{ marginTop: '20px' }} gutter={20}>\n              <Col xs={24} sm={24} md={24} lg={12}>\n                <BasicChartContainer\n                  statisticCode=\"POPULATION\"\n                  countryCode={countryCode}\n                  color=\"#2c82c9\"\n                />\n              </Col>\n              <Col xs={24} sm={24} md={24} lg={12}>\n                <BasicChartContainer\n                  statisticCode=\"GDP_2010_USD\"\n                  countryCode={countryCode}\n                  color=\"#f22613\"\n                  perCapita\n                />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col xs={0} sm={0} md={6}>\n          <img\n            style={{\n              width: '100%',\n              marginBottom: '20px',\n              maxHeight: '180px',\n            }}\n            src={`/img/flags/${country.alpha3Code.toLowerCase()}.svg`}\n            alt={`Flag of ${country.commonName}`}\n          />\n          <GeoJSONMap geojson={country.geojson} center={country.latlng} />\n        </Col>\n      </Row>\n      <Row>\n        <Card\n          key={currentTab}\n          tabList={tabList}\n          activeTabKey={currentTab}\n          onTabChange={tab => goTo(`/country/${countryCode}/${tab}`)}\n        >\n          {tabContent[currentTab](countryCode)}\n        </Card>\n      </Row>\n    </div>\n  );\n}\n\nCountryView.propTypes = {\n  currentTab: PropTypes.string,\n  country: CountryType,\n  goTo: PropTypes.func.isRequired,\n};\nCountryView.defaultProps = {\n  currentTab: 'summary',\n  country: null,\n};\n\nexport default connect((state, props) => ({\n  currentTab: props.match.params.tab,\n  goTo: url => props.history.push(url),\n  country: countryWithAreasSelector(props.match.params.countryCode, state),\n}))(CountryView);\n","import React from 'react';\n\nimport { Row, Card, Col } from 'antd';\n\nfunction AboutView() {\n  return (\n    <div className=\"AboutView\">\n      <Row>\n        <Col md={16}>\n          <Card title={<h1>About</h1>}>\n            <p>\n              The goals of this app are:\n              <ul>\n                <li>to ease the vizualization of energy and economy data</li>\n                <li>gather different data from different place</li>\n                <li>\n                  propose an open-source project to do so, in order to let\n                  everybody contribute to a better understanding of these data.\n                </li>\n              </ul>\n            </p>\n            <p>\n              {'This website has been developped by '}\n              <a href=\"https://github.com/ewoken\" rel=\"noopener noreferrer\">\n                ewoken\n              </a>\n              .\n            </p>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AboutView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { Row, Col, Card } from 'antd';\nimport GeoJSONMap from '../../components/GeoJSONMap';\nimport ScrollToTop from '../../components/ScrollToTop';\n\nimport { areaWithCountriesSelector } from '../../store/otherSelectors';\nimport { fuelProducedOrConsumedCountrySelector } from '../../store/countries';\n\nimport { AreaType } from '../../utils/types';\n\nimport SummaryTab from '../CountryView/components/SummaryTab';\nimport IndependencyTab from '../CountryView/components/IndependencyTab';\nimport ClimateTab from '../CountryView/components/ClimateTab';\nimport BasicChartContainer from '../CountryView/containers/BasicChartContainer';\n\nconst tabList = [\n  { key: 'summary', tab: 'Summary' },\n  { key: 'independency', tab: 'Energy (in)dependency' },\n  { key: 'climate', tab: 'Climate change' },\n];\n\nconst IndependencyTabContainer = connect((state, props) => ({\n  fuelProducedOrConsumed: fuelProducedOrConsumedCountrySelector(\n    props.countryCode,\n    state,\n  ),\n}))(IndependencyTab);\n\nconst tabContent = {\n  summary: areaCode => <SummaryTab countryCode={areaCode} />,\n  independency: areaCode => <IndependencyTabContainer countryCode={areaCode} />,\n  climate: areaCode => <ClimateTab countryCode={areaCode} />,\n};\n\nfunction AreaView(props) {\n  const { area, currentTab, goTo } = props;\n  const latlng = [\n    area.countries.reduce((s, c) => c.latlng[0] + s, 0) / area.countries.length,\n    area.countries.reduce((s, c) => c.latlng[1] + s, 0) / area.countries.length,\n  ];\n\n  if (!area) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"AreaView\">\n      <ScrollToTop areaCode={area.code} />\n      <Row gutter={16}>\n        <Col xs={24} sm={24} md={18}>\n          <Card title={<h2>{`${area.name}`}</h2>}>\n            {area.code !== 'WORLD' && (\n              <div>\n                {`Members : `}\n                {area.countries.map((country, i) => (\n                  <Link\n                    key={country.alpha2Code}\n                    to={`/country/${country.alpha2Code}`}\n                  >\n                    {`${i > 0 ? ', ' : ''}${country.commonName}`}\n                  </Link>\n                ))}\n              </div>\n            )}\n            <Row style={{ marginTop: '20px' }} gutter={10}>\n              <Col xs={24} sm={24} md={24} lg={12}>\n                <BasicChartContainer\n                  statisticCode=\"POPULATION\"\n                  countryCode={area.code}\n                  color=\"#2c82c9\"\n                />\n              </Col>\n              <Col xs={24} sm={24} md={24} lg={12}>\n                <BasicChartContainer\n                  statisticCode=\"GDP_2010_USD\"\n                  countryCode={area.code}\n                  color=\"#f22613\"\n                  perCapita\n                />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col xs={0} sm={0} md={6}>\n          <GeoJSONMap geojson={area.geojson} center={latlng} />\n        </Col>\n      </Row>\n      <Row>\n        <Card\n          key={currentTab}\n          tabList={tabList}\n          activeTabKey={currentTab}\n          onTabChange={tab => goTo(`/area/${area.code}/${tab}`)}\n        >\n          {tabContent[currentTab](area.code)}\n        </Card>\n      </Row>\n    </div>\n  );\n}\n\nAreaView.propTypes = {\n  area: AreaType.isRequired,\n  currentTab: PropTypes.string,\n  goTo: PropTypes.func.isRequired,\n};\n\nAreaView.defaultProps = {\n  currentTab: 'summary',\n};\n\nexport default connect((state, props) => ({\n  currentTab: props.match.params.tab,\n  goTo: url => props.history.push(url),\n  area: areaWithCountriesSelector(props.match.params.areaCode, state),\n}))(AreaView);\n","import React from 'react';\nimport { Icon } from 'antd';\n\nfunction GitHubLink() {\n  return (\n    <a\n      href=\"https://github.com/ewoken/world-data-app\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Icon type=\"github\" theme=\"outlined\" />\n      {'GitHub'}\n    </a>\n  );\n}\n\nexport default GitHubLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { sortBy } from 'ramda';\n\nimport { Menu, Select } from 'antd';\nimport GitHubLink from './GitHubLink';\n\nimport { CountryType, AreaType } from '../utils/types';\nimport { isMobileOrTablet } from '../utils';\n\nfunction HeaderMenu(props) {\n  const { countries, areas, goTo } = props;\n  return (\n    <Menu\n      mode=\"horizontal\"\n      theme=\"dark\"\n      selectable={false}\n      style={{ lineHeight: '64px' }}\n    >\n      <Menu.Item key=\"home\">\n        <Link to=\"/home\">\n          <strong>World Energy Data</strong>\n        </Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Select\n          id=\"mainCountrySelect\"\n          placeholder=\"Countries\"\n          optionFilterProp=\"title\"\n          showSearch={!isMobileOrTablet()}\n          onSelect={value => {\n            goTo(`/country/${value}`);\n          }}\n        >\n          {sortBy(c => c.commonName, countries).map(country => (\n            <Select.Option\n              key={country.alpha2Code}\n              disabled={country.disabled}\n              title={`${country.commonName} (${country.alpha3Code})`}\n            >\n              {`${country.commonName}${country.disabled ? ' (No data)' : ''}`}\n            </Select.Option>\n          ))}\n        </Select>\n      </Menu.Item>\n      <Menu.SubMenu title=\"Areas\">\n        {sortBy(a => a.name, areas).map(area => (\n          <Menu.Item key={area.code}>\n            <Link to={`/area/${area.code}`}>{area.name}</Link>\n          </Menu.Item>\n        ))}\n      </Menu.SubMenu>\n      <Menu.Item key=\"about\">\n        <Link to=\"/about\">About</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <GitHubLink />\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nHeaderMenu.propTypes = {\n  countries: PropTypes.arrayOf(CountryType).isRequired,\n  areas: PropTypes.arrayOf(AreaType).isRequired,\n  goTo: PropTypes.func.isRequired,\n};\n\nexport default HeaderMenu;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Redirect,\n  withRouter,\n} from 'react-router-dom';\nimport { Layout, Spin } from 'antd';\n\nimport HomeView from '../views/HomeView';\nimport CountryView from '../views/CountryView';\nimport AboutView from '../views/AboutView';\nimport AreaView from '../views/AreaView';\n\nimport HeaderMenu from './HeaderMenu';\n\nimport buildLoader from '../HOC/buildLoader';\n\nimport {\n  loadAllCountries,\n  countriesLoadedSelector,\n  countriesSelector,\n} from '../store/countries';\nimport {\n  loadAllStatistics,\n  statisticsLoadedSelector,\n} from '../store/statistics';\nimport {\n  loadAllAreas,\n  areasLoadedSelector,\n  areasSelector,\n} from '../store/areas';\n\nconst CountriesLoader = buildLoader(loadAllCountries);\nconst StatisticsLoader = buildLoader(loadAllStatistics);\nconst AreasLoader = buildLoader(loadAllAreas);\n\nconst ConnectedHeaderMenu = withRouter(\n  connect((state, props) => ({\n    countries: countriesSelector(state),\n    areas: areasSelector(state),\n    goTo: url => props.history.push(url),\n  }))(HeaderMenu),\n);\n\nfunction scrollToAnchor() {\n  const locationHash = window.decodeURIComponent(window.location.hash);\n  const hashParts = locationHash.split('#');\n  if (hashParts.length > 2) {\n    const hash = hashParts.slice(-1)[0];\n    const element = document.getElementById(hash);\n    if (element) {\n      element.scrollIntoView();\n    }\n  }\n}\n\nclass AppLayout extends Component {\n  componentDidMount() {\n    window.onhashchange = scrollToAnchor;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    if (\n      location !== prevProps.location &&\n      !location.pathname.startsWith('/country')\n    ) {\n      window.scrollTo(0, 0);\n    }\n    scrollToAnchor();\n  }\n\n  render() {\n    const { isLoaded } = this.props;\n    return (\n      <div className=\"AppLayout\">\n        <CountriesLoader />\n        <StatisticsLoader />\n        <AreasLoader />\n        <Spin size=\"large\" spinning={!isLoaded}>\n          <Layout>\n            <Layout.Header\n              style={{ position: 'fixed', zIndex: 10, width: '100%' }}\n            >\n              <ConnectedHeaderMenu />\n            </Layout.Header>\n            <Layout.Content>\n              {!isLoaded && <div className=\"AppLayout__splash\" />}\n              {isLoaded && (\n                <Switch>\n                  <Route path=\"/home\" exact component={HomeView} />\n                  <Route\n                    path=\"/country/:countryCode/:tab?\"\n                    exact\n                    component={CountryView}\n                  />\n                  <Route\n                    path=\"/area/:areaCode/:tab?\"\n                    exact\n                    component={AreaView}\n                  />\n                  <Route path=\"/about\" exact component={AboutView} />\n                  <Route\n                    component={() => <Redirect to={{ pathname: '/home' }} />}\n                  />\n                </Switch>\n              )}\n            </Layout.Content>\n            <Layout.Footer>{' '}</Layout.Footer>\n          </Layout>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nAppLayout.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n};\n\n// withRouter needed to prevent blocking\nexport default withRouter(\n  connect(state => ({\n    isLoaded:\n      countriesLoadedSelector(state) &&\n      statisticsLoadedSelector(state) &&\n      areasLoadedSelector(state),\n  }))(AppLayout),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <AppLayout />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}